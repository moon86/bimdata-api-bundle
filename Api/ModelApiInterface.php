<?php
/**
 * ModelApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMData’s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Building;
use OpenAPI\Server\Model\BuildingModelPlanRequest;
use OpenAPI\Server\Model\Classification;
use OpenAPI\Server\Model\ClassificationRequest;
use OpenAPI\Server\Model\CreateBuildingByNameRequest;
use OpenAPI\Server\Model\CreateModelRequest;
use OpenAPI\Server\Model\Document;
use OpenAPI\Server\Model\DocumentWithElementList;
use OpenAPI\Server\Model\Element;
use OpenAPI\Server\Model\ElementClassificationRelation;
use OpenAPI\Server\Model\ElementClassificationRelationRequest;
use OpenAPI\Server\Model\ElementPropertySetRelationRequest;
use OpenAPI\Server\Model\ElementRequest;
use OpenAPI\Server\Model\IfcAccessToken;
use OpenAPI\Server\Model\IfcAccessTokenRequest;
use OpenAPI\Server\Model\IfcExport;
use OpenAPI\Server\Model\IfcExportRequest;
use OpenAPI\Server\Model\IfcMergeRequest;
use OpenAPI\Server\Model\IfcOptimizeRequest;
use OpenAPI\Server\Model\Layer;
use OpenAPI\Server\Model\LayerRequest;
use OpenAPI\Server\Model\Material;
use OpenAPI\Server\Model\Model;
use OpenAPI\Server\Model\ModelErrors;
use OpenAPI\Server\Model\ModelErrorsRequest;
use OpenAPI\Server\Model\ModelFiles;
use OpenAPI\Server\Model\PatchedElementRequest;
use OpenAPI\Server\Model\PatchedIfcAccessTokenRequest;
use OpenAPI\Server\Model\PatchedLayerRequest;
use OpenAPI\Server\Model\PatchedModelRequest;
use OpenAPI\Server\Model\PatchedPositioningPlanRequest;
use OpenAPI\Server\Model\PatchedProcessorHandlerRequest;
use OpenAPI\Server\Model\PatchedPropertyDefinitionRequest;
use OpenAPI\Server\Model\PatchedPropertyRequest;
use OpenAPI\Server\Model\PatchedPropertySetRequest;
use OpenAPI\Server\Model\PatchedSpaceRequest;
use OpenAPI\Server\Model\PatchedStoreyBuildingRequest;
use OpenAPI\Server\Model\PatchedSystemRequest;
use OpenAPI\Server\Model\PatchedUnitRequest;
use OpenAPI\Server\Model\PatchedZoneRequest;
use OpenAPI\Server\Model\PatchedZoneSpaceRequest;
use OpenAPI\Server\Model\PositioningPlan;
use OpenAPI\Server\Model\ProcessorHandler;
use OpenAPI\Server\Model\Property;
use OpenAPI\Server\Model\PropertyDefinition;
use OpenAPI\Server\Model\PropertyDefinitionRequest;
use OpenAPI\Server\Model\PropertyRequest;
use OpenAPI\Server\Model\PropertySet;
use OpenAPI\Server\Model\PropertySetRequest;
use OpenAPI\Server\Model\RawElements;
use OpenAPI\Server\Model\RawElementsRequest;
use OpenAPI\Server\Model\SimpleElement;
use OpenAPI\Server\Model\Space;
use OpenAPI\Server\Model\SpaceRequest;
use OpenAPI\Server\Model\Storey;
use OpenAPI\Server\Model\StoreyBuildingRequest;
use OpenAPI\Server\Model\StoreyModelPlanRequest;
use OpenAPI\Server\Model\System;
use OpenAPI\Server\Model\SystemRequest;
use OpenAPI\Server\Model\Unit;
use OpenAPI\Server\Model\UnitRequest;
use OpenAPI\Server\Model\Zone;
use OpenAPI\Server\Model\ZoneRequest;
use OpenAPI\Server\Model\ZoneSpace;
use OpenAPI\Server\Model\ZoneSpaceRequest;

/**
 * ModelApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface ModelApiInterface
{

    /**
     * Sets authentication method ApiKey
     *
     * @param string|null $value Value of the ApiKey authentication method.
     *
     * @return void
     */
    public function setApiKey(?string $value): void;

    /**
     * Sets authentication method BIMData_Connect
     *
     * @param string|null $value Value of the BIMData_Connect authentication method.
     *
     * @return void
     */
    public function setBIMData_Connect(?string $value): void;

    /**
     * Sets authentication method Bearer
     *
     * @param string|null $value Value of the Bearer authentication method.
     *
     * @return void
     */
    public function setBearer(?string $value): void;

    /**
     * Operation addModelErrors
     *
     * Add errors to model
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  ModelErrorsRequest|null $modelErrorsRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function addModelErrors(int $cloudPk, int $id, int $projectPk, ?ModelErrorsRequest $modelErrorsRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation bulkDeleteModelClassifications
     *
     * Remove all classifications from model's elements
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkDeleteModelClassifications(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkDeleteModelProperties
     *
     * Delete many Property of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkDeleteModelProperties(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkDeleteModelPropertyDefinitions
     *
     * Delete many PropertyDefinitions of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkDeleteModelPropertyDefinitions(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkDeleteModelUnits
     *
     * Delete many Units of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkDeleteModelUnits(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkDeletePropertySet
     *
     * Delete many PropertySet of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkDeletePropertySet(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkFullUpdateElements
     *
     * Update many elements at once (only changing fields may be defined)
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $elementRequest   (required)
     * @param  string|null $classification   (optional)
     * @param  string|null $classificationNotation   (optional)
     * @param  string|null $type   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function bulkFullUpdateElements(int $cloudPk, int $modelPk, int $projectPk, array $elementRequest, ?string $classification, ?string $classificationNotation, ?string $type, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation bulkFullUpdateModelProperty
     *
     * Update some fields of many properties of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $propertyRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function bulkFullUpdateModelProperty(int $cloudPk, int $modelPk, int $projectPk, array $propertyRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation bulkRemoveClassificationsOfElement
     *
     * Remove many classifications from an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkRemoveClassificationsOfElement(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkRemoveDocumentsOfElement
     *
     * Remove many documents from an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkRemoveDocumentsOfElement(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkRemoveElementsFromClassification
     *
     * Remove the classifications from all elements
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelClassificationPk  A unique integer value identifying this classification. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function bulkRemoveElementsFromClassification(int $cloudPk, int $modelClassificationPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation bulkUpdateElements
     *
     * Update many elements at once (all field must be defined)
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $elementRequest   (required)
     * @param  string|null $classification   (optional)
     * @param  string|null $classificationNotation   (optional)
     * @param  string|null $type   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function bulkUpdateElements(int $cloudPk, int $modelPk, int $projectPk, array $elementRequest, ?string $classification, ?string $classificationNotation, ?string $type, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation bulkUpdateModelProperty
     *
     * Update all fields of many properties of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $propertyRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function bulkUpdateModelProperty(int $cloudPk, int $modelPk, int $projectPk, array $propertyRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createAccessToken
     *
     * Create a token for this model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  IfcAccessTokenRequest|null $ifcAccessTokenRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createAccessToken(int $cloudPk, int $modelPk, int $projectPk, ?IfcAccessTokenRequest $ifcAccessTokenRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createBuilding
     *
     * Create a building of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  StoreyBuildingRequest $storeyBuildingRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createBuilding(int $cloudPk, int $modelPk, int $projectPk, StoreyBuildingRequest $storeyBuildingRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createBuildingPlan
     *
     * Create a relation between a 2d model and a building
     *
     * @param  string $buildingUuid   (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  BuildingModelPlanRequest $buildingModelPlanRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createBuildingPlan(string $buildingUuid, int $cloudPk, int $modelPk, int $projectPk, BuildingModelPlanRequest $buildingModelPlanRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createClassificationElementRelations
     *
     * Create association between existing classification and existing element
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $elementClassificationRelationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function createClassificationElementRelations(int $cloudPk, int $modelPk, int $projectPk, array $elementClassificationRelationRequest, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation createClassificationsOfElement
     *
     * Create one or many classifications to an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $classificationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createClassificationsOfElement(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, array $classificationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createElement
     *
     * Create an element in the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $elementRequest   (required)
     * @param  string|null $classification   (optional)
     * @param  string|null $classificationNotation   (optional)
     * @param  string|null $type   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createElement(int $cloudPk, int $modelPk, int $projectPk, array $elementRequest, ?string $classification, ?string $classificationNotation, ?string $type, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createElementPropertySet
     *
     * Create a PropertySets to an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PropertySetRequest|null $propertySetRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createElementPropertySet(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, ?PropertySetRequest $propertySetRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createElementPropertySetProperty
     *
     * Create a property to a PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  PropertyRequest $propertyRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createElementPropertySetProperty(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int $propertysetPk, PropertyRequest $propertyRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createElementPropertySetPropertyDefinition
     *
     * Create a Definition to a Property
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  PropertyDefinitionRequest|null $propertyDefinitionRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createElementPropertySetPropertyDefinition(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int $propertyPk, int $propertysetPk, ?PropertyDefinitionRequest $propertyDefinitionRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createElementPropertySetPropertyDefinitionUnit
     *
     * Create a Unit to a Definition
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertydefinitionPk  A unique integer value identifying this property definition. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  UnitRequest $unitRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createElementPropertySetPropertyDefinitionUnit(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int $propertyPk, int $propertydefinitionPk, int $propertysetPk, UnitRequest $unitRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createLayer
     *
     * Create a layer in the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  LayerRequest $layerRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createLayer(int $cloudPk, int $modelPk, int $projectPk, LayerRequest $layerRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createMetaBuilding
     *
     * Create an empty 3D Model
     *
     * @param  int $cloudPk   (required)
     * @param  int $projectPk   (required)
     * @param  CreateBuildingByNameRequest $createBuildingByNameRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createMetaBuilding(int $cloudPk, int $projectPk, CreateBuildingByNameRequest $createBuildingByNameRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createModel
     *
     * Make a PDF or Image file a Model
     *
     * @param  int $cloudPk   (required)
     * @param  int $projectPk   (required)
     * @param  CreateModelRequest $createModelRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createModel(int $cloudPk, int $projectPk, CreateModelRequest $createModelRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createModelPropertyDefinition
     *
     * Create a PropertyDefinition on the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $propertyDefinitionRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createModelPropertyDefinition(int $cloudPk, int $modelPk, int $projectPk, array $propertyDefinitionRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createModelUnit
     *
     * Create a Unit on a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $unitRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createModelUnit(int $cloudPk, int $modelPk, int $projectPk, array $unitRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createPropertySet
     *
     * Create one or many PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $propertySetRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createPropertySet(int $cloudPk, int $modelPk, int $projectPk, array $propertySetRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createPropertySetElementRelations
     *
     * Create association between PropertySet and element
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $elementPropertySetRelationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function createPropertySetElementRelations(int $cloudPk, int $modelPk, int $projectPk, array $elementPropertySetRelationRequest, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation createRawElements
     *
     * Create elements in an optimized format
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  RawElementsRequest $rawElementsRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function createRawElements(int $cloudPk, int $modelPk, int $projectPk, RawElementsRequest $rawElementsRequest, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation createSpace
     *
     * Create a space in the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $spaceRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createSpace(int $cloudPk, int $modelPk, int $projectPk, array $spaceRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createStorey
     *
     * Create a storey of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  StoreyBuildingRequest $storeyBuildingRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createStorey(int $cloudPk, int $modelPk, int $projectPk, StoreyBuildingRequest $storeyBuildingRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createStoreyPlan
     *
     * Create a relation between a 2d model and a storey
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $storeyUuid   (required)
     * @param  StoreyModelPlanRequest $storeyModelPlanRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createStoreyPlan(int $cloudPk, int $modelPk, int $projectPk, string $storeyUuid, StoreyModelPlanRequest $storeyModelPlanRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createSystem
     *
     * Create a system in the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  SystemRequest $systemRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createSystem(int $cloudPk, int $modelPk, int $projectPk, SystemRequest $systemRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createTileset
     *
     * Create the tileset of the model and upload all files
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function createTileset(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation createZone
     *
     * Create a zone in the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $zoneRequest   (required)
     * @param  string|null $color   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createZone(int $cloudPk, int $modelPk, int $projectPk, array $zoneRequest, ?string $color, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createZoneSpace
     *
     * Create a space in a zone
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $zonePk  A unique integer value identifying this zone. (required)
     * @param  ZoneSpaceRequest $zoneSpaceRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createZoneSpace(int $cloudPk, int $modelPk, int $projectPk, int $zonePk, ZoneSpaceRequest $zoneSpaceRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation deleteAccessToken
     *
     * Delete a token
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $token   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteAccessToken(int $cloudPk, int $modelPk, int $projectPk, string $token, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteBuilding
     *
     * Delete a building of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteBuilding(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteBuildingPlan
     *
     * Delete the relation between a 2d model and a building
     *
     * @param  string $buildingUuid   (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this element. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteBuildingPlan(string $buildingUuid, int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteElement
     *
     * Delete an element of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteElement(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteLayer
     *
     * Delete a layer of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this layer. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteLayer(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteModel
     *
     * Delete a model
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteModel(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteModelProperty
     *
     * Delete a Property of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteModelProperty(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteModelPropertyDefinition
     *
     * Delete a PropertyDefinitions of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property definition. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteModelPropertyDefinition(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteModelUnit
     *
     * Delete a Unit of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this unit. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteModelUnit(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteModelWithoutDoc
     *
     * Delete the Model without deleting the related document
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteModelWithoutDoc(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deletePropertySet
     *
     * Delete a PropertySet of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property set. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deletePropertySet(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteSpace
     *
     * Delete a space
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this space. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteSpace(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteStorey
     *
     * Delete a storey of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteStorey(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteStoreyPlan
     *
     * Delete the relation between a 2d model and a storey
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this element. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $storeyUuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteStoreyPlan(int $cloudPk, int $id, int $modelPk, int $projectPk, string $storeyUuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteSystem
     *
     * Delete a system of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteSystem(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteZone
     *
     * Delete a zone of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this zone. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteZone(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteZoneSpace
     *
     * Delete a space of a zone
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this space. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $zonePk  A unique integer value identifying this zone. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteZoneSpace(int $cloudPk, int $id, int $modelPk, int $projectPk, int $zonePk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation exportIfc
     *
     * Export IFC
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  IfcExportRequest $ifcExportRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function exportIfc(int $cloudPk, int $id, int $projectPk, IfcExportRequest $ifcExportRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation fullUpdateElement
     *
     * Update all fields of an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  ElementRequest $elementRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function fullUpdateElement(int $cloudPk, int $modelPk, int $projectPk, string $uuid, ElementRequest $elementRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getAccessToken
     *
     * Retrieve one token created for this model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $token   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getAccessToken(int $cloudPk, int $modelPk, int $projectPk, string $token, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getAccessTokens
     *
     * Retrieve all tokens created for this model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getAccessTokens(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBuilding
     *
     * Retrieve a building of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBuilding(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBuildingPlanPositioning
     *
     * Retrieve the postioning of the plan in the building
     *
     * @param  string $buildingUuid   (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this element. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBuildingPlanPositioning(string $buildingUuid, int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBuildings
     *
     * Retrieve all buildings of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBuildings(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getClassificationsOfElement
     *
     * Retrieve all classifications of an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getClassificationsOfElement(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getDocumentsOfElement
     *
     * Retrieve all documents of an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getDocumentsOfElement(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElement
     *
     * Retrieve an element of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElement(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementLinkedDocuments
     *
     * Retrieve all documents linked to any element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string|null $classification   (optional)
     * @param  string|null $classificationNotation   (optional)
     * @param  string|null $type   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementLinkedDocuments(int $cloudPk, int $modelPk, int $projectPk, ?string $classification, ?string $classificationNotation, ?string $type, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySet
     *
     * Retrieve a PropertySet of an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property set. (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySet(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySetProperties
     *
     * Retrieve all Properties of a PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySetProperties(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySetProperty
     *
     * Retrieve a Property of a PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySetProperty(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySetPropertyDefinition
     *
     * Retrieve a Definition of a Property
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property definition. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySetPropertyDefinition(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertyPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySetPropertyDefinitionUnit
     *
     * Retrieve a Unit of a Definition
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this unit. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertydefinitionPk  A unique integer value identifying this property definition. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySetPropertyDefinitionUnit(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertyPk, int $propertydefinitionPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySetPropertyDefinitionUnits
     *
     * Retrieve all Units of a Definition
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertydefinitionPk  A unique integer value identifying this property definition. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySetPropertyDefinitionUnits(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int $propertyPk, int $propertydefinitionPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySetPropertyDefinitions
     *
     * Retrieve all Definitions of a PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySetPropertyDefinitions(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int $propertyPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementPropertySets
     *
     * Retrieve all PropertySets of an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementPropertySets(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElements
     *
     * Retrieve all elements of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string|null $classification   (optional)
     * @param  string|null $classificationNotation   (optional)
     * @param  string|null $type   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElements(int $cloudPk, int $modelPk, int $projectPk, ?string $classification, ?string $classificationNotation, ?string $type, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getElementsFromClassification
     *
     * Retrieve all elements with the classification
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelClassificationPk  A unique integer value identifying this classification. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getElementsFromClassification(int $cloudPk, int $modelClassificationPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getLayer
     *
     * Retrieve a layer of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this layer. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getLayer(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getLayers
     *
     * Retrieve all layers of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getLayers(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getMaterial
     *
     * Retrieve a material of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this material. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getMaterial(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getMaterials
     *
     * Retrieve all materials of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getMaterials(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModel
     *
     * Retrieve one model
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModel(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelClassifications
     *
     * Retrieve all classifications in a model
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelClassifications(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelMaterial
     *
     * Retrieve a material of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this material. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelMaterial(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelMaterials
     *
     * Retrieve all materials of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelMaterials(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelProperties
     *
     * Retrieve all Properties of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelProperties(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelProperty
     *
     * Retrieve a Property of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelProperty(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelPropertyDefinition
     *
     * Retrieve a PropertyDefinition of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property definition. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelPropertyDefinition(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelPropertyDefinitions
     *
     * Retrieve all PropertyDefinitions of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelPropertyDefinitions(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelUnit
     *
     * Retrieve a Unit of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this unit. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelUnit(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModelUnits
     *
     * Retrieve all Units of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModelUnits(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getModels
     *
     * Retrieve all models
     *
     * @param  int $cloudPk   (required)
     * @param  int $projectPk   (required)
     * @param  string|null $source   (optional)
     * @param  array|null $status   (optional)
     * @param  array|null $type   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getModels(int $cloudPk, int $projectPk, ?string $source, ?array $status, ?array $type, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProcessorHandler
     *
     * Retrieve a processor handler
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this processor handler. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProcessorHandler(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProcessorHandlers
     *
     * Get all processor handlers
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProcessorHandlers(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getPropertySet
     *
     * Retrieve a PropertySet of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property set. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPropertySet(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getPropertySets
     *
     * Retrieve all PropertySets of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPropertySets(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRawElements
     *
     * Retrieve all elements in a optimized format
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRawElements(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSimpleElement
     *
     * Retrieve an element of a model with a simple value representation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSimpleElement(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSimpleElements
     *
     * Retrieve all elements of a model with a simple value representation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSimpleElements(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSpace
     *
     * Retrieve one space of the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this space. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSpace(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSpaces
     *
     * Retrieve all spaces of the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSpaces(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getStorey
     *
     * Retrieve a storey of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getStorey(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getStoreyPlanPositioning
     *
     * Retrieve the postioning of the plan in the storey
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this element. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $storeyUuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getStoreyPlanPositioning(int $cloudPk, int $id, int $modelPk, int $projectPk, string $storeyUuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getStoreys
     *
     * Retrieve all storeys of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getStoreys(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSystem
     *
     * Retrieve a system of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSystem(int $cloudPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSystems
     *
     * Retrieve all systems of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSystems(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getTileset
     *
     * Retrieve the tileset of the model
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  string $tileFormat   (optional, default to 'pnts')
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function getTileset(int $cloudPk, int $id, int $projectPk, string $tileFormat, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation getZone
     *
     * Retrieve one zone of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this zone. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getZone(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getZoneSpace
     *
     * Retrieve one space of a zone
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this space. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $zonePk  A unique integer value identifying this zone. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getZoneSpace(int $cloudPk, int $id, int $modelPk, int $projectPk, int $zonePk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getZoneSpaces
     *
     * Retrieve all spaces of a zone
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $zonePk  A unique integer value identifying this zone. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getZoneSpaces(int $cloudPk, int $modelPk, int $projectPk, int $zonePk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getZones
     *
     * Retrieve zones of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string|null $color   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getZones(int $cloudPk, int $modelPk, int $projectPk, ?string $color, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation linkDocumentsOfElement
     *
     * Link one or many documents to an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $requestBody   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function linkDocumentsOfElement(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, array $requestBody, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation listClassificationElementRelations
     *
     * List all associations between classifications and elements
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function listClassificationElementRelations(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation mergeIfcs
     *
     * Merge IFC files
     *
     * @param  int $cloudPk   (required)
     * @param  int $projectPk   (required)
     * @param  IfcMergeRequest $ifcMergeRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function mergeIfcs(int $cloudPk, int $projectPk, IfcMergeRequest $ifcMergeRequest, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation optimizeIfc
     *
     * Optimize the IFC
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  IfcOptimizeRequest|null $ifcOptimizeRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function optimizeIfc(int $cloudPk, int $id, int $projectPk, ?IfcOptimizeRequest $ifcOptimizeRequest, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeAllElementPropertySet
     *
     * Remove all property sets from element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeAllElementPropertySet(int $cloudPk, string $elementUuid, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeClassificationOfElement
     *
     * Remove a classification from an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this classification. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeClassificationOfElement(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeDocumentOfElement
     *
     * Remove a documents from an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeDocumentOfElement(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeElementPropertySet
     *
     * Remove a PropertySet from an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property set. (required)
     * @param  int $modelPk   (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeElementPropertySet(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeElementPropertySetProperty
     *
     * Remove a property from a PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeElementPropertySetProperty(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeElementPropertySetPropertyDefinition
     *
     * Delete a Definition to a Property
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property definition. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeElementPropertySetPropertyDefinition(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertyPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeElementPropertySetPropertyDefinitionUnit
     *
     * Remove a Unit from a Definition
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this unit. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertyPk  A unique integer value identifying this property. (required)
     * @param  int $propertydefinitionPk  A unique integer value identifying this property definition. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeElementPropertySetPropertyDefinitionUnit(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertyPk, int $propertydefinitionPk, int $propertysetPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation removeElementsFromClassification
     *
     * Remove the classification from all elements
     *
     * @param  int $cloudPk   (required)
     * @param  int $modelClassificationPk  A unique integer value identifying this classification. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function removeElementsFromClassification(int $cloudPk, int $modelClassificationPk, int $modelPk, int $projectPk, string $uuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation reprocessModel
     *
     * Reprocess Model file
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function reprocessModel(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation updateAccessToken
     *
     * Update some fields of a token
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $token   (required)
     * @param  PatchedIfcAccessTokenRequest|null $patchedIfcAccessTokenRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateAccessToken(int $cloudPk, int $modelPk, int $projectPk, string $token, ?PatchedIfcAccessTokenRequest $patchedIfcAccessTokenRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateBuilding
     *
     * Update some fields of a building
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  PatchedStoreyBuildingRequest|null $patchedStoreyBuildingRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateBuilding(int $cloudPk, int $modelPk, int $projectPk, string $uuid, ?PatchedStoreyBuildingRequest $patchedStoreyBuildingRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateBuildingPlanPositioning
     *
     * Update the postioning of the plan in the building
     *
     * @param  string $buildingUuid   (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this element. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedPositioningPlanRequest|null $patchedPositioningPlanRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateBuildingPlanPositioning(string $buildingUuid, int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedPositioningPlanRequest $patchedPositioningPlanRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateElement
     *
     * Update some fields of an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  PatchedElementRequest|null $patchedElementRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateElement(int $cloudPk, int $modelPk, int $projectPk, string $uuid, ?PatchedElementRequest $patchedElementRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateElementPropertySetProperty
     *
     * Update a property from an element
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  string $elementUuid   (required)
     * @param  int $id  A unique integer value identifying this property. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $propertysetPk  A unique integer value identifying this property set. (required)
     * @param  PatchedPropertyRequest|null $patchedPropertyRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateElementPropertySetProperty(int $cloudPk, string $elementUuid, int $id, int $modelPk, int $projectPk, int $propertysetPk, ?PatchedPropertyRequest $patchedPropertyRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateLayer
     *
     * Update some fields of a layer
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this layer. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedLayerRequest|null $patchedLayerRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateLayer(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedLayerRequest $patchedLayerRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateModel
     *
     * Update some fields of a model
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  PatchedModelRequest|null $patchedModelRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateModel(int $cloudPk, int $id, int $projectPk, ?PatchedModelRequest $patchedModelRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateModelFiles
     *
     * Update models file (gltf, svg, structure, etc)
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this model. (required)
     * @param  int $projectPk   (required)
     * @param  UploadedFile|null $structureFile   (optional)
     * @param  UploadedFile|null $systemsFile   (optional)
     * @param  UploadedFile|null $mapFile   (optional)
     * @param  UploadedFile|null $gltfFile   (optional)
     * @param  UploadedFile|null $gltfWithOpeningsFile   (optional)
     * @param  UploadedFile|null $bvhTreeFile   (optional)
     * @param  UploadedFile|null $previewFile   (optional)
     * @param  UploadedFile|null $xktFile   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateModelFiles(int $cloudPk, int $id, int $projectPk, ?UploadedFile $structureFile, ?UploadedFile $systemsFile, ?UploadedFile $mapFile, ?UploadedFile $gltfFile, ?UploadedFile $gltfWithOpeningsFile, ?UploadedFile $bvhTreeFile, ?UploadedFile $previewFile, ?UploadedFile $xktFile, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateModelProperty
     *
     * Update some fields of a Property
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedPropertyRequest|null $patchedPropertyRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateModelProperty(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedPropertyRequest $patchedPropertyRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateModelPropertyDefinition
     *
     * Update some fields of many PropertyDefinitions of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property definition. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedPropertyDefinitionRequest|null $patchedPropertyDefinitionRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateModelPropertyDefinition(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedPropertyDefinitionRequest $patchedPropertyDefinitionRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateModelUnit
     *
     * Update some fields of a Unit of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this unit. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedUnitRequest|null $patchedUnitRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateModelUnit(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedUnitRequest $patchedUnitRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateOrderBuildingPlan
     *
     * Update order of all plan of a building
     *
     * @param  string $buildingUuid   (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $requestBody   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateOrderBuildingPlan(string $buildingUuid, int $cloudPk, int $modelPk, int $projectPk, array $requestBody, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateOrderStoreyPlan
     *
     * Update order of all plan of a storey
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $storeyUuid   (required)
     * @param  array $requestBody   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateOrderStoreyPlan(int $cloudPk, int $modelPk, int $projectPk, string $storeyUuid, array $requestBody, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateOrderStoreys
     *
     * Update order of all storey of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $requestBody   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateOrderStoreys(int $cloudPk, int $modelPk, int $projectPk, array $requestBody, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateProcessorHandler
     *
     * Update the status of a processor handler
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this processor handler. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedProcessorHandlerRequest|null $patchedProcessorHandlerRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateProcessorHandler(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedProcessorHandlerRequest $patchedProcessorHandlerRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updatePropertySet
     *
     * Update some fields of a PropertySet
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this property set. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedPropertySetRequest|null $patchedPropertySetRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updatePropertySet(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedPropertySetRequest $patchedPropertySetRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateSpace
     *
     * Update some fields of a space
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this space. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedSpaceRequest|null $patchedSpaceRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateSpace(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedSpaceRequest $patchedSpaceRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateStorey
     *
     * Update some fields of a storey
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  PatchedStoreyBuildingRequest|null $patchedStoreyBuildingRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateStorey(int $cloudPk, int $modelPk, int $projectPk, string $uuid, ?PatchedStoreyBuildingRequest $patchedStoreyBuildingRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateStoreyPlanPositioning
     *
     * Update the postioning of the plan in the storey
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this element. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $storeyUuid   (required)
     * @param  PatchedPositioningPlanRequest|null $patchedPositioningPlanRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateStoreyPlanPositioning(int $cloudPk, int $id, int $modelPk, int $projectPk, string $storeyUuid, ?PatchedPositioningPlanRequest $patchedPositioningPlanRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateSystem
     *
     * Update some fields of a system
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $uuid   (required)
     * @param  PatchedSystemRequest|null $patchedSystemRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateSystem(int $cloudPk, int $modelPk, int $projectPk, string $uuid, ?PatchedSystemRequest $patchedSystemRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateZone
     *
     * Update some fields of a zone
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this zone. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedZoneRequest|null $patchedZoneRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateZone(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedZoneRequest $patchedZoneRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateZoneSpace
     *
     * Update some fields of a space
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this space. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $zonePk  A unique integer value identifying this zone. (required)
     * @param  PatchedZoneSpaceRequest|null $patchedZoneSpaceRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateZoneSpace(int $cloudPk, int $id, int $modelPk, int $projectPk, int $zonePk, ?PatchedZoneSpaceRequest $patchedZoneSpaceRequest, int &$responseCode, array &$responseHeaders): array|object|null;

}
