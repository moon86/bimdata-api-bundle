<?php
/**
 * CollaborationApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMData’s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Classification;
use OpenAPI\Server\Model\ClassificationRequest;
use OpenAPI\Server\Model\Cloud;
use OpenAPI\Server\Model\CloudInvitation;
use OpenAPI\Server\Model\CloudInvitationRequest;
use OpenAPI\Server\Model\CloudRequest;
use OpenAPI\Server\Model\Document;
use OpenAPI\Server\Model\Folder;
use OpenAPI\Server\Model\FolderUserProject;
use OpenAPI\Server\Model\FolderWithoutChildren;
use OpenAPI\Server\Model\FolderWithoutChildrenRequest;
use OpenAPI\Server\Model\Group;
use OpenAPI\Server\Model\GroupFolder;
use OpenAPI\Server\Model\GroupRequest;
use OpenAPI\Server\Model\PatchedClassificationRequest;
use OpenAPI\Server\Model\PatchedCloudRequest;
use OpenAPI\Server\Model\PatchedDocumentRequest;
use OpenAPI\Server\Model\PatchedFolderWithoutChildrenRequest;
use OpenAPI\Server\Model\PatchedGroupFolderRequest;
use OpenAPI\Server\Model\PatchedGroupRequest;
use OpenAPI\Server\Model\PatchedProjectAccessTokenRequest;
use OpenAPI\Server\Model\PatchedProjectRequest;
use OpenAPI\Server\Model\PatchedTagRequest;
use OpenAPI\Server\Model\PatchedUserCloudUpdateRequest;
use OpenAPI\Server\Model\PatchedUserProjectUpdateRequest;
use OpenAPI\Server\Model\PatchedVisaCommentRequest;
use OpenAPI\Server\Model\PatchedVisaRequest;
use OpenAPI\Server\Model\PatchedVisaValidationRequest;
use OpenAPI\Server\Model\Project;
use OpenAPI\Server\Model\ProjectAccessToken;
use OpenAPI\Server\Model\ProjectAccessTokenRequest;
use OpenAPI\Server\Model\ProjectFolderTree;
use OpenAPI\Server\Model\ProjectInvitation;
use OpenAPI\Server\Model\ProjectInvitationRequest;
use OpenAPI\Server\Model\ProjectRequest;
use OpenAPI\Server\Model\ProjectSize;
use OpenAPI\Server\Model\ProjectWithChildren;
use OpenAPI\Server\Model\SelfUser;
use OpenAPI\Server\Model\Size;
use OpenAPI\Server\Model\Tag;
use OpenAPI\Server\Model\TagIdRequest;
use OpenAPI\Server\Model\TagRequest;
use OpenAPI\Server\Model\User;
use OpenAPI\Server\Model\UserInvitation;
use OpenAPI\Server\Model\UserProject;
use OpenAPI\Server\Model\UserProjectIdRequest;
use OpenAPI\Server\Model\Visa;
use OpenAPI\Server\Model\VisaComment;
use OpenAPI\Server\Model\VisaCommentRequest;
use OpenAPI\Server\Model\VisaRequest;
use OpenAPI\Server\Model\VisaValidation;
use OpenAPI\Server\Model\VisaValidationRequest;
use OpenAPI\Server\Model\WriteFolderRequest;

/**
 * CollaborationApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface CollaborationApiInterface
{

    /**
     * Sets authentication method ApiKey
     *
     * @param string|null $value Value of the ApiKey authentication method.
     *
     * @return void
     */
    public function setApiKey(?string $value): void;

    /**
     * Sets authentication method BIMData_Connect
     *
     * @param string|null $value Value of the BIMData_Connect authentication method.
     *
     * @return void
     */
    public function setBIMData_Connect(?string $value): void;

    /**
     * Sets authentication method Bearer
     *
     * @param string|null $value Value of the Bearer authentication method.
     *
     * @return void
     */
    public function setBearer(?string $value): void;

    /**
     * Operation acceptUserInvitation
     *
     * Accept an invitation
     *
     * @param  int $id  A unique integer value identifying this invitation. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function acceptUserInvitation(int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation acceptValidation
     *
     * Accept a validation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa validation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function acceptValidation(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation addDocumentTag
     *
     * Add a tag to a document
     *
     * @param  int $cloudPk   (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk   (required)
     * @param  TagIdRequest $tagIdRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function addDocumentTag(int $cloudPk, int $documentPk, int $projectPk, TagIdRequest $tagIdRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation addGroupMember
     *
     * Add a user to a group
     *
     * @param  int $cloudPk   (required)
     * @param  int $groupPk  A unique integer value identifying this group. (required)
     * @param  int $projectPk   (required)
     * @param  UserProjectIdRequest $userProjectIdRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function addGroupMember(int $cloudPk, int $groupPk, int $projectPk, UserProjectIdRequest $userProjectIdRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation cancelCloudUserInvitation
     *
     * Cancel a pending invitation
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this invitation. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function cancelCloudUserInvitation(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation cancelProjectUserInvitation
     *
     * Cancel a pending invitation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this invitation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function cancelProjectUserInvitation(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation checkAccess
     *
     * Check app access from cloud
     *
     * @param  int $id  A unique integer value identifying this cloud. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function checkAccess(int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation closeVisa
     *
     * Close a visa of a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function closeVisa(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation createClassification
     *
     * Create a classification
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  array $classificationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createClassification(int $cloudPk, int $projectPk, array $classificationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createCloud
     *
     * Create a cloud
     *
     * @param  CloudRequest $cloudRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createCloud(CloudRequest $cloudRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createDMSTree
     *
     * Create a complete DMS tree
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  array $writeFolderRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createDMSTree(int $cloudPk, int $id, array $writeFolderRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createDemo
     *
     * Create a Demo project in a cloud
     *
     * @param  int $id  A unique integer value identifying this cloud. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createDemo(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createDocument
     *
     * Create a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $name  Shown name of the file (required)
     * @param  UploadedFile $file   (required)
     * @param  int|null $parentId   (optional)
     * @param  string|null $fileName  Full name of the file (optional)
     * @param  string|null $description  Description of the file (optional)
     * @param  int|null $size  Size of the file. (optional)
     * @param  string|null $modelSource  Define the model.source field if the upload is a Model (IFC, PDF, DWG...) (optional)
     * @param  string|null $ifcSource  DEPRECATED: Use &#39;model_source&#39; instead. Define the model.source field if the upload is a Model (IFC, PDF, DWG...) (optional)
     * @param  int|null $successorOf  Old document version to replace. Only for create (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createDocument(int $cloudPk, int $projectPk, string $name, UploadedFile $file, ?int $parentId, ?string $fileName, ?string $description, ?int $size, ?string $modelSource, ?string $ifcSource, ?int $successorOf, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createFolder
     *
     * Create a folder
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  FolderWithoutChildrenRequest $folderWithoutChildrenRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createFolder(int $cloudPk, int $projectPk, FolderWithoutChildrenRequest $folderWithoutChildrenRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createManageGroup
     *
     * Create a group
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  GroupRequest $groupRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createManageGroup(int $cloudPk, int $projectPk, GroupRequest $groupRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createProject
     *
     * Create a project
     *
     * @param  int $cloudPk   (required)
     * @param  ProjectRequest $projectRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createProject(int $cloudPk, ProjectRequest $projectRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createProjectAccessToken
     *
     * Create a token for this project
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  ProjectAccessTokenRequest $projectAccessTokenRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createProjectAccessToken(int $cloudPk, int $projectPk, ProjectAccessTokenRequest $projectAccessTokenRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createTag
     *
     * Create a tag
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  TagRequest $tagRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createTag(int $cloudPk, int $projectPk, TagRequest $tagRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createValidation
     *
     * Add a validation to a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  VisaValidationRequest $visaValidationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createValidation(int $cloudPk, int $documentPk, int $projectPk, int $visaPk, VisaValidationRequest $visaValidationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createVisa
     *
     * Create a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  VisaRequest|null $visaRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createVisa(int $cloudPk, int $documentPk, int $projectPk, ?VisaRequest $visaRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createVisaComment
     *
     * Add a comment
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  VisaCommentRequest|null $visaCommentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createVisaComment(int $cloudPk, int $documentPk, int $projectPk, int $visaPk, ?VisaCommentRequest $visaCommentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation deleteAllDocumentHistory
     *
     * Delete all document history
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteAllDocumentHistory(int $cloudPk, int $documentPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteClassification
     *
     * Delete a classification
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this classification. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteClassification(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteCloud
     *
     * Delete a cloud
     *
     * @param  int $id  A unique integer value identifying this cloud. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteCloud(int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteCloudUser
     *
     * Remove a user from a cloud
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this fos user. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteCloudUser(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteDocument
     *
     * Delete the document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteDocument(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteDocumentTag
     *
     * Delete a tag from a document
     *
     * @param  int $cloudPk   (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteDocumentTag(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteFolder
     *
     * Delete a folder
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this folder. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteFolder(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteGroupMember
     *
     * Delete a user from a group
     *
     * @param  int $cloudPk   (required)
     * @param  int $groupPk  A unique integer value identifying this group. (required)
     * @param  int $id  A unique integer value identifying this group. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteGroupMember(int $cloudPk, int $groupPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteManageGroup
     *
     * Delete a group
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this group. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteManageGroup(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteProject
     *
     * Delete a project
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteProject(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteProjectAccessToken
     *
     * Delete a token
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $token   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteProjectAccessToken(int $cloudPk, int $projectPk, string $token, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteProjectUser
     *
     * Remove a user from a project
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this user project. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteProjectUser(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteTag
     *
     * Delete the tag
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this tag. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteTag(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteValidation
     *
     * Remove a validation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa validation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteValidation(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteVisa
     *
     * Remove a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteVisa(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteVisaComment
     *
     * Remove a comment
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa comment. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteVisaComment(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation denyUserInvitation
     *
     * Deny an invitation
     *
     * @param  int $id  A unique integer value identifying this invitation. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function denyUserInvitation(int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation denyValidation
     *
     * Deny a validation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa validation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function denyValidation(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation getClassification
     *
     * Retrieve a classification
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this classification. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getClassification(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getClassifications
     *
     * Retrieve all classifications
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getClassifications(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCloud
     *
     * Retrieve one cloud
     *
     * @param  int $id  A unique integer value identifying this cloud. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCloud(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCloudInvitations
     *
     * Retrieve all pending invitations in the cloud
     *
     * @param  int $cloudPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCloudInvitations(int $cloudPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCloudSize
     *
     * Get size of the cloud
     *
     * @param  int $id  A unique integer value identifying this cloud. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCloudSize(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCloudUser
     *
     * Retrieve a user in a cloud
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this fos user. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCloudUser(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCloudUsers
     *
     * Retrieve all users in a cloud, or a list with a filter by email
     *
     * @param  int $cloudPk   (required)
     * @param  string|null $email   (optional)
     * @param  string|null $emailContains   (optional)
     * @param  string|null $emailEndswith   (optional)
     * @param  string|null $emailStartswith   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCloudUsers(int $cloudPk, ?string $email, ?string $emailContains, ?string $emailEndswith, ?string $emailStartswith, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getClouds
     *
     * Retrieve all clouds
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getClouds(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getDocument
     *
     * Retrieve a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getDocument(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getDocumentHistories
     *
     * Retrieve all document histories
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getDocumentHistories(int $cloudPk, int $documentPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getDocuments
     *
     * Retrieve all documents
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getDocuments(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getFolder
     *
     * Retrieve a folder
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this folder. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getFolder(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getFolderProjectUsers
     *
     * Retrieve all users in a project with the permission on the folder
     *
     * @param  int $cloudPk   (required)
     * @param  int $folderPk  A unique integer value identifying this folder. (required)
     * @param  int $projectPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getFolderProjectUsers(int $cloudPk, int $folderPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getFolders
     *
     * Retrieve all folders
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getFolders(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getGroup
     *
     * Retrieve a group
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this group. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getGroup(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getGroups
     *
     * Retrieve all groups
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getGroups(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getManageGroup
     *
     * Retrieve a group
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this group. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getManageGroup(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getManageGroups
     *
     * Retrieve all groups
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getManageGroups(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProject
     *
     * Retrieve a project
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProject(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectAccessToken
     *
     * Retrieve one token created for this project
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $token   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectAccessToken(int $cloudPk, int $projectPk, string $token, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectAccessTokens
     *
     * Retrieve all tokens created for this project
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectAccessTokens(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectCreatorVisas
     *
     * List visas created by user
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectCreatorVisas(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectDMSTree
     *
     * Retrieve the complete DMS tree
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectDMSTree(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectFolderTreeSerializers
     *
     * Retrieve folder tree for all projects
     *
     * @param  int $cloudPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectFolderTreeSerializers(int $cloudPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectInvitations
     *
     * Retrieve all pending invitations in the project
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectInvitations(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectSize
     *
     * Get size of all model files in the project
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectSize(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectSubTree
     *
     * Retrieve the complete projects tree of the cloud
     *
     * @param  int $cloudPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectSubTree(int $cloudPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectTree
     *
     * Retrieve the complete DMS tree
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     * @deprecated
     */
    public function getProjectTree(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectUsers
     *
     * Retrieve all users in a project, or a list with a filter by email
     *
     * @param  int $cloudPk   (required)
     * @param  int $projectPk   (required)
     * @param  string|null $email  Filter the returned list by email (optional)
     * @param  string|null $emailContains  Filter the returned list by email__contains (optional)
     * @param  string|null $emailEndswith  Filter the returned list by email__endswith (optional)
     * @param  string|null $emailStartswith  Filter the returned list by email__startswith (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectUsers(int $cloudPk, int $projectPk, ?string $email, ?string $emailContains, ?string $emailEndswith, ?string $emailStartswith, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjectValidatorVisas
     *
     * List visas where user is a validator
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjectValidatorVisas(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getProjects
     *
     * Retrieve all projects
     *
     * @param  int $cloudPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getProjects(int $cloudPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSelfProjects
     *
     * List current user's projects
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSelfProjects(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSelfUser
     *
     * Get info about the current user
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSelfUser(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getTag
     *
     * Retrieve a tag
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this tag. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getTag(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getTags
     *
     * Retrieve all tags
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getTags(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getUserInvitation
     *
     * Retrieve an invitation
     *
     * @param  int $id  A unique integer value identifying this invitation. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getUserInvitation(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getUserInvitations
     *
     * List user's invitations
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getUserInvitations(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getValidation
     *
     * Retrieve a validation to a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa validation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getValidation(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getValidations
     *
     * List all validations to a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getValidations(int $cloudPk, int $documentPk, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getVisa
     *
     * Retrieve a visa of a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getVisa(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getVisaComment
     *
     * Retrieve a comment
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa comment. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getVisaComment(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getVisaComments
     *
     * List all comment of a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getVisaComments(int $cloudPk, int $documentPk, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getVisas
     *
     * List all visas of a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getVisas(int $cloudPk, int $documentPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation inviteCloudUser
     *
     * Invite a cloud administrator
     *
     * @param  int $cloudPk   (required)
     * @param  CloudInvitationRequest $cloudInvitationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function inviteCloudUser(int $cloudPk, CloudInvitationRequest $cloudInvitationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation inviteProjectUser
     *
     * Invite a project member
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  ProjectInvitationRequest $projectInvitationRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function inviteProjectUser(int $cloudPk, int $projectPk, ProjectInvitationRequest $projectInvitationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation leaveProject
     *
     * Leave the project
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function leaveProject(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation leaveVersionDocumentHistory
     *
     * Leave the history version
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function leaveVersionDocumentHistory(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation makeHeadVersionDocumentHistory
     *
     * Make the head of the version
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function makeHeadVersionDocumentHistory(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation pauseVisa
     *
     * Pause a visa of a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function pauseVisa(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation resetValidation
     *
     * Reset a validation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa validation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function resetValidation(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation resumeVisa
     *
     * Resume a visa of a document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function resumeVisa(int $cloudPk, int $documentPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation updateClassification
     *
     * Update some fields of a classification
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this classification. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedClassificationRequest|null $patchedClassificationRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateClassification(int $cloudPk, int $id, int $projectPk, ?PatchedClassificationRequest $patchedClassificationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateCloud
     *
     * Update some fields of a cloud
     *
     * @param  int $id  A unique integer value identifying this cloud. (required)
     * @param  PatchedCloudRequest|null $patchedCloudRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateCloud(int $id, ?PatchedCloudRequest $patchedCloudRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateCloudUser
     *
     * Change the user role in the cloud
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this fos user. (required)
     * @param  PatchedUserCloudUpdateRequest|null $patchedUserCloudUpdateRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateCloudUser(int $cloudPk, int $id, ?PatchedUserCloudUpdateRequest $patchedUserCloudUpdateRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateDocument
     *
     * Update some fields of the document
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this document. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedDocumentRequest|null $patchedDocumentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateDocument(int $cloudPk, int $id, int $projectPk, ?PatchedDocumentRequest $patchedDocumentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateFolder
     *
     * Update some fields of a folder
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this folder. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedFolderWithoutChildrenRequest|null $patchedFolderWithoutChildrenRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateFolder(int $cloudPk, int $id, int $projectPk, ?PatchedFolderWithoutChildrenRequest $patchedFolderWithoutChildrenRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateGroupFolder
     *
     * Update the permission of a group on a folder
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $folderPk   (required)
     * @param  int $id  A unique integer value identifying this group folder. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedGroupFolderRequest|null $patchedGroupFolderRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateGroupFolder(int $cloudPk, int $folderPk, int $id, int $projectPk, ?PatchedGroupFolderRequest $patchedGroupFolderRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateManageGroup
     *
     * Update some fields of a group
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this group. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedGroupRequest|null $patchedGroupRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateManageGroup(int $cloudPk, int $id, int $projectPk, ?PatchedGroupRequest $patchedGroupRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateProject
     *
     * Update some fields of a project
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  PatchedProjectRequest|null $patchedProjectRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateProject(int $cloudPk, int $id, ?PatchedProjectRequest $patchedProjectRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateProjectAccessToken
     *
     * Update some fields of a token
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  string $token   (required)
     * @param  PatchedProjectAccessTokenRequest|null $patchedProjectAccessTokenRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateProjectAccessToken(int $cloudPk, int $projectPk, string $token, ?PatchedProjectAccessTokenRequest $patchedProjectAccessTokenRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateProjectUser
     *
     * Change the user role in the cloud
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this user project. (required)
     * @param  int $projectPk   (required)
     * @param  PatchedUserProjectUpdateRequest|null $patchedUserProjectUpdateRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateProjectUser(int $cloudPk, int $id, int $projectPk, ?PatchedUserProjectUpdateRequest $patchedUserProjectUpdateRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateTag
     *
     * Update some fields of the tag
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this tag. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedTagRequest|null $patchedTagRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateTag(int $cloudPk, int $id, int $projectPk, ?PatchedTagRequest $patchedTagRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateValidation
     *
     * Update the validator of validation
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa validation. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  PatchedVisaValidationRequest|null $patchedVisaValidationRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateValidation(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, ?PatchedVisaValidationRequest $patchedVisaValidationRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateVisa
     *
     * Update some fields of a visa
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedVisaRequest|null $patchedVisaRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateVisa(int $cloudPk, int $documentPk, int $id, int $projectPk, ?PatchedVisaRequest $patchedVisaRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateVisaComment
     *
     * Update some fields of a comment
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $documentPk  A unique integer value identifying this document. (required)
     * @param  int $id  A unique integer value identifying this visa comment. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $visaPk  A unique integer value identifying this visa. (required)
     * @param  PatchedVisaCommentRequest|null $patchedVisaCommentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateVisaComment(int $cloudPk, int $documentPk, int $id, int $projectPk, int $visaPk, ?PatchedVisaCommentRequest $patchedVisaCommentRequest, int &$responseCode, array &$responseHeaders): array|object|null;

}
