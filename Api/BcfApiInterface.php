<?php
/**
 * BcfApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMData’s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\BcfProject;
use OpenAPI\Server\Model\BcfProjectRequest;
use OpenAPI\Server\Model\Coloring;
use OpenAPI\Server\Model\Comment;
use OpenAPI\Server\Model\CommentRequest;
use OpenAPI\Server\Model\Component;
use OpenAPI\Server\Model\DetailedExtensions;
use OpenAPI\Server\Model\Extensions;
use OpenAPI\Server\Model\FullTopic;
use OpenAPI\Server\Model\FullTopicRequest;
use OpenAPI\Server\Model\Label;
use OpenAPI\Server\Model\LabelRequest;
use OpenAPI\Server\Model\PatchedBcfProjectRequest;
use OpenAPI\Server\Model\PatchedCommentRequest;
use OpenAPI\Server\Model\PatchedFullTopicRequest;
use OpenAPI\Server\Model\PatchedLabelRequest;
use OpenAPI\Server\Model\PatchedPriorityRequest;
use OpenAPI\Server\Model\PatchedStageRequest;
use OpenAPI\Server\Model\PatchedTopicRequest;
use OpenAPI\Server\Model\PatchedTopicStatusRequest;
use OpenAPI\Server\Model\PatchedTopicTypeRequest;
use OpenAPI\Server\Model\PatchedViewpointRequest;
use OpenAPI\Server\Model\Priority;
use OpenAPI\Server\Model\PriorityRequest;
use OpenAPI\Server\Model\SelfBcfUser;
use OpenAPI\Server\Model\Stage;
use OpenAPI\Server\Model\StageRequest;
use OpenAPI\Server\Model\Topic;
use OpenAPI\Server\Model\TopicRequest;
use OpenAPI\Server\Model\TopicStatus;
use OpenAPI\Server\Model\TopicStatusRequest;
use OpenAPI\Server\Model\TopicType;
use OpenAPI\Server\Model\TopicTypeRequest;
use OpenAPI\Server\Model\Viewpoint;
use OpenAPI\Server\Model\ViewpointRequest;
use OpenAPI\Server\Model\Visibility;

/**
 * BcfApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface BcfApiInterface
{

    /**
     * Sets authentication method ApiKey
     *
     * @param string|null $value Value of the ApiKey authentication method.
     *
     * @return void
     */
    public function setApiKey(?string $value): void;

    /**
     * Sets authentication method BIMData_Connect
     *
     * @param string|null $value Value of the BIMData_Connect authentication method.
     *
     * @return void
     */
    public function setBIMData_Connect(?string $value): void;

    /**
     * Sets authentication method Bearer
     *
     * @param string|null $value Value of the Bearer authentication method.
     *
     * @return void
     */
    public function setBearer(?string $value): void;

    /**
     * Operation createComment
     *
     * Create a comment
     *
     * @param  int $projectsPk  A unique integer value identifying this project. (required)
     * @param  string $topicsGuid   (required)
     * @param  CommentRequest|null $commentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createComment(int $projectsPk, string $topicsGuid, ?CommentRequest $commentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createExtensionLabel
     *
     * Create a Label
     *
     * @param  int $projectsPk   (required)
     * @param  LabelRequest $labelRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createExtensionLabel(int $projectsPk, LabelRequest $labelRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createExtensionPriority
     *
     * Create a Priority
     *
     * @param  int $projectsPk   (required)
     * @param  PriorityRequest $priorityRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createExtensionPriority(int $projectsPk, PriorityRequest $priorityRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createExtensionStage
     *
     * Create a Stage
     *
     * @param  int $projectsPk   (required)
     * @param  StageRequest $stageRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createExtensionStage(int $projectsPk, StageRequest $stageRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createExtensionStatus
     *
     * Create a TopicStatus
     *
     * @param  int $projectsPk   (required)
     * @param  TopicStatusRequest $topicStatusRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createExtensionStatus(int $projectsPk, TopicStatusRequest $topicStatusRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createExtensionType
     *
     * Create a TopicType
     *
     * @param  int $projectsPk   (required)
     * @param  TopicTypeRequest $topicTypeRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createExtensionType(int $projectsPk, TopicTypeRequest $topicTypeRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createFullTopic
     *
     * Create a Topic with viewpoints and comments
     *
     * @param  int $projectsPk   (required)
     * @param  FullTopicRequest $fullTopicRequest   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createFullTopic(int $projectsPk, FullTopicRequest $fullTopicRequest, ?string $imgFormat, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createTopic
     *
     * Create a topic
     *
     * @param  int $projectsPk   (required)
     * @param  TopicRequest $topicRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createTopic(int $projectsPk, TopicRequest $topicRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createViewpoint
     *
     * Create a Viewpoint
     *
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  ViewpointRequest|null $viewpointRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createViewpoint(int $projectsPk, string $topicsGuid, ?string $imgFormat, ?ViewpointRequest $viewpointRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation deleteComment
     *
     * Delete a comment
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk  A unique integer value identifying this project. (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteComment(string $guid, int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteExtensionLabel
     *
     * Delete a Label
     *
     * @param  int $id  A unique integer value identifying this label. (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteExtensionLabel(int $id, int $projectsPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteExtensionPriority
     *
     * Delete a Priority
     *
     * @param  int $id  A unique integer value identifying this priority. (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteExtensionPriority(int $id, int $projectsPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteExtensionStage
     *
     * Delete a Stage
     *
     * @param  int $id  A unique integer value identifying this stage. (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteExtensionStage(int $id, int $projectsPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteExtensionStatus
     *
     * Delete a TopicStatus
     *
     * @param  int $id  A unique integer value identifying this topic status. (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteExtensionStatus(int $id, int $projectsPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteExtensionType
     *
     * Delete a TopicType
     *
     * @param  int $id  A unique integer value identifying this topic type. (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteExtensionType(int $id, int $projectsPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteTopic
     *
     * Delete a topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteTopic(string $guid, int $projectsPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteViewpoint
     *
     * Delete a Viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteViewpoint(string $guid, int $projectsPk, string $topicsGuid, ?string $imgFormat, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation downloadBcfExport
     *
     * Export project's topics in bcf-xml format
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  string|null $format  topic format to export, comma separated. Default &#x3D; standard (optional)
     * @param  string|null $topics  topic guids to export, comma separated. Default &#x3D; all (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function downloadBcfExport(int $id, ?string $format, ?string $topics, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation fullUpdateBcfProject
     *
     * Update all fields of a BCF project
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  BcfProjectRequest $bcfProjectRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function fullUpdateBcfProject(int $id, BcfProjectRequest $bcfProjectRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation fullUpdateComment
     *
     * Update all fields of a comment
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk  A unique integer value identifying this project. (required)
     * @param  string $topicsGuid   (required)
     * @param  CommentRequest|null $commentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function fullUpdateComment(string $guid, int $projectsPk, string $topicsGuid, ?CommentRequest $commentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation fullUpdateFullTopic
     *
     * Update all fields of a topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  FullTopicRequest $fullTopicRequest   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function fullUpdateFullTopic(string $guid, int $projectsPk, FullTopicRequest $fullTopicRequest, ?string $imgFormat, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation fullUpdateTopic
     *
     * Update all fields of a topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  TopicRequest $topicRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function fullUpdateTopic(string $guid, int $projectsPk, TopicRequest $topicRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation fullUpdateViewpoint
     *
     * Update all fields of a Viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  ViewpointRequest|null $viewpointRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function fullUpdateViewpoint(string $guid, int $projectsPk, string $topicsGuid, ?string $imgFormat, ?ViewpointRequest $viewpointRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBcfProject
     *
     * Retrieve a BCF project
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBcfProject(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBcfProjects
     *
     * Retrieve all BCF projects
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBcfProjects(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getColorings
     *
     * Retrieve all colorings of a viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getColorings(string $guid, int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getComment
     *
     * Retrieve a comment
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk  A unique integer value identifying this project. (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getComment(string $guid, int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getComments
     *
     * Retrieve all comments
     *
     * @param  int $projectsPk  A unique integer value identifying this project. (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getComments(int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getDetailedExtensions
     *
     * Retrieve project detailed extensions
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getDetailedExtensions(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getExtensions
     *
     * Retrieve project extensions
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getExtensions(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getFullTopic
     *
     * Retrieve a full topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getFullTopic(string $guid, int $projectsPk, ?string $imgFormat, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getFullTopics
     *
     * Retrieve all full topics
     *
     * @param  int $projectsPk   (required)
     * @param  string|null $format   (optional)
     * @param  array|null $ifcs   (optional)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  array|null $models   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getFullTopics(int $projectsPk, ?string $format, ?array $ifcs, ?string $imgFormat, ?array $models, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSelections
     *
     * Retrieve all selections of a viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSelections(string $guid, int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSnapshot
     *
     * Retrieve the viewpoint' snapshot
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSnapshot(string $guid, int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getTopic
     *
     * Retrieve a topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getTopic(string $guid, int $projectsPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getTopicViewpoints
     *
     * Retrieve all viewpoints attached to the topic
     *
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getTopicViewpoints(int $projectsPk, string $topicsGuid, ?string $imgFormat, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getTopics
     *
     * Retrieve all topics
     *
     * @param  int $projectsPk   (required)
     * @param  string|null $format   (optional)
     * @param  array|null $ifcs   (optional)
     * @param  array|null $models   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getTopics(int $projectsPk, ?string $format, ?array $ifcs, ?array $models, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getUser
     *
     * Get current user info
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getUser(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getViewpoint
     *
     * Retrieve a Viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getViewpoint(string $guid, int $projectsPk, string $topicsGuid, ?string $imgFormat, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getViewpoints
     *
     * Retrieve all Viewpoints of a topic
     *
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getViewpoints(int $projectsPk, string $topicsGuid, ?string $imgFormat, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getVisibilities
     *
     * Retrieve all visibilities of a viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getVisibilities(string $guid, int $projectsPk, string $topicsGuid, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation importBcf
     *
     * Import bcf-xml format into this project
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  string $name  Name of the project (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function importBcf(int $id, string $name, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation updateBcfProject
     *
     * Update some fields of a BCF project
     *
     * @param  int $id  A unique integer value identifying this project. (required)
     * @param  PatchedBcfProjectRequest|null $patchedBcfProjectRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateBcfProject(int $id, ?PatchedBcfProjectRequest $patchedBcfProjectRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateComment
     *
     * Update some fields of a comment
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk  A unique integer value identifying this project. (required)
     * @param  string $topicsGuid   (required)
     * @param  PatchedCommentRequest|null $patchedCommentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateComment(string $guid, int $projectsPk, string $topicsGuid, ?PatchedCommentRequest $patchedCommentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateExtensionLabel
     *
     * Update a Label
     *
     * @param  int $id  A unique integer value identifying this label. (required)
     * @param  int $projectsPk   (required)
     * @param  PatchedLabelRequest|null $patchedLabelRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateExtensionLabel(int $id, int $projectsPk, ?PatchedLabelRequest $patchedLabelRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateExtensionPriority
     *
     * Update a Priority
     *
     * @param  int $id  A unique integer value identifying this priority. (required)
     * @param  int $projectsPk   (required)
     * @param  PatchedPriorityRequest|null $patchedPriorityRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateExtensionPriority(int $id, int $projectsPk, ?PatchedPriorityRequest $patchedPriorityRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateExtensionStage
     *
     * Update a Stage
     *
     * @param  int $id  A unique integer value identifying this stage. (required)
     * @param  int $projectsPk   (required)
     * @param  PatchedStageRequest|null $patchedStageRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateExtensionStage(int $id, int $projectsPk, ?PatchedStageRequest $patchedStageRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateExtensionStatus
     *
     * Update a TopicStatus
     *
     * @param  int $id  A unique integer value identifying this topic status. (required)
     * @param  int $projectsPk   (required)
     * @param  PatchedTopicStatusRequest|null $patchedTopicStatusRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateExtensionStatus(int $id, int $projectsPk, ?PatchedTopicStatusRequest $patchedTopicStatusRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateExtensionType
     *
     * Update a TopicType
     *
     * @param  int $id  A unique integer value identifying this topic type. (required)
     * @param  int $projectsPk   (required)
     * @param  PatchedTopicTypeRequest|null $patchedTopicTypeRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateExtensionType(int $id, int $projectsPk, ?PatchedTopicTypeRequest $patchedTopicTypeRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateFullTopic
     *
     * Update some fields of a topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  PatchedFullTopicRequest|null $patchedFullTopicRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateFullTopic(string $guid, int $projectsPk, ?string $imgFormat, ?PatchedFullTopicRequest $patchedFullTopicRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateTopic
     *
     * Update some fields of a topic
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  PatchedTopicRequest|null $patchedTopicRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateTopic(string $guid, int $projectsPk, ?PatchedTopicRequest $patchedTopicRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateViewpoint
     *
     * Update some fields of a Viewpoint
     *
     * @param  string $guid   (required)
     * @param  int $projectsPk   (required)
     * @param  string $topicsGuid   (required)
     * @param  string|null $imgFormat  All snapshot_data will be returned as url instead of base64 (optional)
     * @param  PatchedViewpointRequest|null $patchedViewpointRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateViewpoint(string $guid, int $projectsPk, string $topicsGuid, ?string $imgFormat, ?PatchedViewpointRequest $patchedViewpointRequest, int &$responseCode, array &$responseHeaders): array|object|null;

}
