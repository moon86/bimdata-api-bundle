<?php
/**
 * WebhookApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMData’s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\PatchedWebHookRequest;
use OpenAPI\Server\Model\WebHook;
use OpenAPI\Server\Model\WebHookRequest;

/**
 * WebhookApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface WebhookApiInterface
{

    /**
     * Sets authentication method ApiKey
     *
     * @param string|null $value Value of the ApiKey authentication method.
     *
     * @return void
     */
    public function setApiKey(?string $value): void;

    /**
     * Sets authentication method BIMData_Connect
     *
     * @param string|null $value Value of the BIMData_Connect authentication method.
     *
     * @return void
     */
    public function setBIMData_Connect(?string $value): void;

    /**
     * Sets authentication method Bearer
     *
     * @param string|null $value Value of the Bearer authentication method.
     *
     * @return void
     */
    public function setBearer(?string $value): void;

    /**
     * Operation createWebHook
     *
     * Create a new Webhook
     *
     * @param  int $cloudPk   (required)
     * @param  WebHookRequest $webHookRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createWebHook(int $cloudPk, WebHookRequest $webHookRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation deleteWebHook
     *
     * Delete a webhook
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this web hook. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteWebHook(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation getWebHook
     *
     * Retrieve one configured webhook
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this web hook. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getWebHook(int $cloudPk, int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getWebHooks
     *
     * Retrieve all configured webhooks
     *
     * @param  int $cloudPk   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getWebHooks(int $cloudPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation pingWebHook
     *
     * Test a webhook
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this web hook. (required)
     * @param  WebHookRequest $webHookRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function pingWebHook(int $cloudPk, int $id, WebHookRequest $webHookRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateWebHook
     *
     * Update some field of a webhook
     *
     * @param  int $cloudPk   (required)
     * @param  int $id  A unique integer value identifying this web hook. (required)
     * @param  PatchedWebHookRequest|null $patchedWebHookRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateWebHook(int $cloudPk, int $id, ?PatchedWebHookRequest $patchedWebHookRequest, int &$responseCode, array &$responseHeaders): array|object|null;

}
