<?php
/**
 * CheckerApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMData’s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\CheckPlan;
use OpenAPI\Server\Model\CheckPlanRequest;
use OpenAPI\Server\Model\CheckerResult;
use OpenAPI\Server\Model\CheckerResultRequest;
use OpenAPI\Server\Model\IfcChecker;
use OpenAPI\Server\Model\IfcCheckerRequest;
use OpenAPI\Server\Model\PatchedCheckPlanRequest;
use OpenAPI\Server\Model\PatchedCheckerResultRequest;
use OpenAPI\Server\Model\PatchedIfcCheckerRequest;
use OpenAPI\Server\Model\PatchedRuleComponentRequest;
use OpenAPI\Server\Model\PatchedRuleRequest;
use OpenAPI\Server\Model\PatchedRulesetRequest;
use OpenAPI\Server\Model\Rule;
use OpenAPI\Server\Model\RuleComponent;
use OpenAPI\Server\Model\RuleComponentRequest;
use OpenAPI\Server\Model\RuleRequest;
use OpenAPI\Server\Model\Ruleset;
use OpenAPI\Server\Model\RulesetRequest;

/**
 * CheckerApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface CheckerApiInterface
{

    /**
     * Sets authentication method ApiKey
     *
     * @param string|null $value Value of the ApiKey authentication method.
     *
     * @return void
     */
    public function setApiKey(?string $value): void;

    /**
     * Sets authentication method BIMData_Connect
     *
     * @param string|null $value Value of the BIMData_Connect authentication method.
     *
     * @return void
     */
    public function setBIMData_Connect(?string $value): void;

    /**
     * Sets authentication method Bearer
     *
     * @param string|null $value Value of the Bearer authentication method.
     *
     * @return void
     */
    public function setBearer(?string $value): void;

    /**
     * Operation createChecker
     *
     * Create a checker to a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  IfcCheckerRequest|null $ifcCheckerRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createChecker(int $cloudPk, int $modelPk, int $projectPk, ?IfcCheckerRequest $ifcCheckerRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createCheckerResult
     *
     * Create a CheckerResult
     *
     * @param  int $checkerPk  A unique integer value identifying this ifc checker. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  CheckerResultRequest|null $checkerResultRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createCheckerResult(int $checkerPk, int $cloudPk, int $modelPk, int $projectPk, ?CheckerResultRequest $checkerResultRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createCheckplan
     *
     * Create a Checkplan
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  CheckPlanRequest $checkPlanRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createCheckplan(int $cloudPk, int $projectPk, CheckPlanRequest $checkPlanRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createRule
     *
     * Create a Rule
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  RuleRequest $ruleRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createRule(int $checkPlanPk, int $cloudPk, int $projectPk, int $rulesetPk, RuleRequest $ruleRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createRuleComponent
     *
     * Create a RuleComponent
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulePk  A unique integer value identifying this rule. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  RuleComponentRequest|null $ruleComponentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createRuleComponent(int $checkPlanPk, int $cloudPk, int $projectPk, int $rulePk, int $rulesetPk, ?RuleComponentRequest $ruleComponentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createRuleset
     *
     * Create a Ruleset
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  RulesetRequest $rulesetRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createRuleset(int $checkPlanPk, int $cloudPk, int $projectPk, RulesetRequest $rulesetRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation deleteChecker
     *
     * Delete a checker of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ifc checker. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteChecker(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteCheckerResult
     *
     * Delete a CheckerResult
     *
     * @param  int $checkerPk  A unique integer value identifying this ifc checker. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this checker result. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteCheckerResult(int $checkerPk, int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteCheckplan
     *
     * Delete a Checkplan
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this check plan. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteCheckplan(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteRule
     *
     * Delete a Rule
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this rule. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteRule(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int $rulesetPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteRuleComponent
     *
     * Delete a RuleComponent
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this rule component. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulePk  A unique integer value identifying this rule. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteRuleComponent(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int $rulePk, int $rulesetPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation deleteRuleset
     *
     * Delete a Ruleset
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ruleset. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deleteRuleset(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation getChecker
     *
     * Retrieve a checker of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ifc checker. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getChecker(int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCheckerResult
     *
     * Retrieve one CheckerResult
     *
     * @param  int $checkerPk  A unique integer value identifying this ifc checker. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this checker result. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCheckerResult(int $checkerPk, int $cloudPk, int $id, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCheckerResults
     *
     * Retrieve all CheckerResults
     *
     * @param  int $checkerPk  A unique integer value identifying this ifc checker. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCheckerResults(int $checkerPk, int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCheckers
     *
     * Retrieve all checkers of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCheckers(int $cloudPk, int $modelPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCheckplan
     *
     * Retrieve one Checkplan
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this check plan. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCheckplan(int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCheckplans
     *
     * Retrieve all Checkplans
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCheckplans(int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRule
     *
     * Retrieve one Rule
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this rule. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRule(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int $rulesetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRuleComponent
     *
     * Retrieve one RuleComponent
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this rule component. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulePk  A unique integer value identifying this rule. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRuleComponent(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int $rulePk, int $rulesetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRuleComponents
     *
     * Retrieve all RuleComponents
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulePk  A unique integer value identifying this rule. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRuleComponents(int $checkPlanPk, int $cloudPk, int $projectPk, int $rulePk, int $rulesetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRules
     *
     * Retrieve all Rules
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRules(int $checkPlanPk, int $cloudPk, int $projectPk, int $rulesetPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRuleset
     *
     * Retrieve one Ruleset
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ruleset. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRuleset(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getRulesets
     *
     * Retrieve all Rulesets
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getRulesets(int $checkPlanPk, int $cloudPk, int $projectPk, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation launchNewCheck
     *
     * Launch a new check on the model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ifc checker. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  IfcCheckerRequest|null $ifcCheckerRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function launchNewCheck(int $cloudPk, int $id, int $modelPk, int $projectPk, ?IfcCheckerRequest $ifcCheckerRequest, int &$responseCode, array &$responseHeaders): void;


    /**
     * Operation updateChecker
     *
     * Update some fields of a checker of a model
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ifc checker. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedIfcCheckerRequest|null $patchedIfcCheckerRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateChecker(int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedIfcCheckerRequest $patchedIfcCheckerRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateCheckerResult
     *
     * Update some fields of a CheckerResult
     *
     * @param  int $checkerPk  A unique integer value identifying this ifc checker. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this checker result. (required)
     * @param  int $modelPk  A unique integer value identifying this model. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedCheckerResultRequest|null $patchedCheckerResultRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateCheckerResult(int $checkerPk, int $cloudPk, int $id, int $modelPk, int $projectPk, ?PatchedCheckerResultRequest $patchedCheckerResultRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateCheckplan
     *
     * Update some fields of a Checkplan
     *
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this check plan. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedCheckPlanRequest|null $patchedCheckPlanRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateCheckplan(int $cloudPk, int $id, int $projectPk, ?PatchedCheckPlanRequest $patchedCheckPlanRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateRule
     *
     * Update some fields of a Rule
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this rule. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  PatchedRuleRequest|null $patchedRuleRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateRule(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int $rulesetPk, ?PatchedRuleRequest $patchedRuleRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateRuleComponent
     *
     * Update some fields of a RuleComponent
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this rule component. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  int $rulePk  A unique integer value identifying this rule. (required)
     * @param  int $rulesetPk  A unique integer value identifying this ruleset. (required)
     * @param  PatchedRuleComponentRequest|null $patchedRuleComponentRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateRuleComponent(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, int $rulePk, int $rulesetPk, ?PatchedRuleComponentRequest $patchedRuleComponentRequest, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation updateRuleset
     *
     * Update some fields of a Ruleset
     *
     * @param  int $checkPlanPk  A unique integer value identifying this check plan. (required)
     * @param  int $cloudPk  A unique integer value identifying this cloud. (required)
     * @param  int $id  A unique integer value identifying this ruleset. (required)
     * @param  int $projectPk  A unique integer value identifying this project. (required)
     * @param  PatchedRulesetRequest|null $patchedRulesetRequest   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updateRuleset(int $checkPlanPk, int $cloudPk, int $id, int $projectPk, ?PatchedRulesetRequest $patchedRulesetRequest, int &$responseCode, array &$responseHeaders): array|object|null;

}
