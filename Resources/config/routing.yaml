# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# bcf
open_api_server_bcf_createcomment:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createCommentAction
    requirements:
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_createextensionlabel:
    path:     /bcf/2.1/projects/{projects_pk}/extension/label
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createExtensionLabelAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createextensionpriority:
    path:     /bcf/2.1/projects/{projects_pk}/extension/priority
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createExtensionPriorityAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createextensionstage:
    path:     /bcf/2.1/projects/{projects_pk}/extension/stage
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createExtensionStageAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createextensionstatus:
    path:     /bcf/2.1/projects/{projects_pk}/extension/status
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createExtensionStatusAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createextensiontype:
    path:     /bcf/2.1/projects/{projects_pk}/extension/type
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createExtensionTypeAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createfulltopic:
    path:     /bcf/2.1/projects/{projects_pk}/full-topic
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createFullTopicAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createtopic:
    path:     /bcf/2.1/projects/{projects_pk}/topics
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createTopicAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_createviewpoint:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::createViewpointAction
    requirements:
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_deletecomment:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteCommentAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_deleteextensionlabel:
    path:     /bcf/2.1/projects/{projects_pk}/extension/label/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteExtensionLabelAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_deleteextensionpriority:
    path:     /bcf/2.1/projects/{projects_pk}/extension/priority/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteExtensionPriorityAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_deleteextensionstage:
    path:     /bcf/2.1/projects/{projects_pk}/extension/stage/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteExtensionStageAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_deleteextensionstatus:
    path:     /bcf/2.1/projects/{projects_pk}/extension/status/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteExtensionStatusAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_deleteextensiontype:
    path:     /bcf/2.1/projects/{projects_pk}/extension/type/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteExtensionTypeAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_deletetopic:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{guid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_deleteviewpoint:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.bcf::deleteViewpointAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_downloadbcfexport:
    path:     /bcf/2.1/projects/{id}/export
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::downloadBcfExportAction
    requirements:
        id: '\d+'

open_api_server_bcf_fullupdatebcfproject:
    path:     /bcf/2.1/projects/{id}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bcf::fullUpdateBcfProjectAction
    requirements:
        id: '\d+'

open_api_server_bcf_fullupdatecomment:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bcf::fullUpdateCommentAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_fullupdatefulltopic:
    path:     /bcf/2.1/projects/{projects_pk}/full-topic/{guid}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bcf::fullUpdateFullTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_fullupdatetopic:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{guid}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bcf::fullUpdateTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_fullupdateviewpoint:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bcf::fullUpdateViewpointAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getbcfproject:
    path:     /bcf/2.1/projects/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getBcfProjectAction
    requirements:
        id: '\d+'

open_api_server_bcf_getbcfprojects:
    path:     /bcf/2.1/projects
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getBcfProjectsAction

open_api_server_bcf_getcolorings:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/coloring
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getColoringsAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getcomment:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getCommentAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getcomments:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getCommentsAction
    requirements:
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getdetailedextensions:
    path:     /bcf/2.1/projects/{id}/detailed-extensions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getDetailedExtensionsAction
    requirements:
        id: '\d+'

open_api_server_bcf_getextensions:
    path:     /bcf/2.1/projects/{id}/extensions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getExtensionsAction
    requirements:
        id: '\d+'

open_api_server_bcf_getfulltopic:
    path:     /bcf/2.1/projects/{projects_pk}/full-topic/{guid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getFullTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_getfulltopics:
    path:     /bcf/2.1/projects/{projects_pk}/full-topic
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getFullTopicsAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_getselections:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/selection
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getSelectionsAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getsnapshot:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/snapshot
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getSnapshotAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_gettopic:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{guid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_gettopicviewpoints:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/topic-viewpoints
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getTopicViewpointsAction
    requirements:
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_gettopics:
    path:     /bcf/2.1/projects/{projects_pk}/topics
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getTopicsAction
    requirements:
        projectsPk: '\d+'

open_api_server_bcf_getuser:
    path:     /bcf/2.1/current-user
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getUserAction

open_api_server_bcf_getviewpoint:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getViewpointAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getviewpoints:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getViewpointsAction
    requirements:
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_getvisibilities:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/visibility
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.bcf::getVisibilitiesAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_importbcf:
    path:     /bcf/2.1/projects/{id}/import
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bcf::importBcfAction
    requirements:
        id: '\d+'

open_api_server_bcf_updatebcfproject:
    path:     /bcf/2.1/projects/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateBcfProjectAction
    requirements:
        id: '\d+'

open_api_server_bcf_updatecomment:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateCommentAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

open_api_server_bcf_updateextensionlabel:
    path:     /bcf/2.1/projects/{projects_pk}/extension/label/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateExtensionLabelAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_updateextensionpriority:
    path:     /bcf/2.1/projects/{projects_pk}/extension/priority/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateExtensionPriorityAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_updateextensionstage:
    path:     /bcf/2.1/projects/{projects_pk}/extension/stage/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateExtensionStageAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_updateextensionstatus:
    path:     /bcf/2.1/projects/{projects_pk}/extension/status/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateExtensionStatusAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_updateextensiontype:
    path:     /bcf/2.1/projects/{projects_pk}/extension/type/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateExtensionTypeAction
    requirements:
        id: '\d+'
        projectsPk: '\d+'

open_api_server_bcf_updatefulltopic:
    path:     /bcf/2.1/projects/{projects_pk}/full-topic/{guid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateFullTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_updatetopic:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{guid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateTopicAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'

open_api_server_bcf_updateviewpoint:
    path:     /bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.bcf::updateViewpointAction
    requirements:
        guid: '[a-z0-9]+'
        projectsPk: '\d+'
        topicsGuid: '[a-z0-9]+'

# checker
open_api_server_checker_createchecker:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::createCheckerAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_createcheckerresult:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{checker_pk}/result
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::createCheckerResultAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_createcheckplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::createCheckplanAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_createrule:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::createRuleAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        projectPk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_createrulecomponent:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::createRuleComponentAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        projectPk: '\d+'
        rulePk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_createruleset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::createRulesetAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_deletechecker:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.checker::deleteCheckerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_deletecheckerresult:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{checker_pk}/result/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.checker::deleteCheckerResultAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_deletecheckplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.checker::deleteCheckplanAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_checker_deleterule:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.checker::deleteRuleAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_deleterulecomponent:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.checker::deleteRuleComponentAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        rulePk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_deleteruleset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.checker::deleteRulesetAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_checker_getchecker:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getCheckerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_getcheckerresult:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{checker_pk}/result/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getCheckerResultAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_getcheckerresults:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{checker_pk}/result
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getCheckerResultsAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_getcheckers:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getCheckersAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_getcheckplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getCheckplanAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_checker_getcheckplans:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getCheckplansAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_getrule:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getRuleAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_getrulecomponent:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getRuleComponentAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        rulePk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_getrulecomponents:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getRuleComponentsAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        projectPk: '\d+'
        rulePk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_getrules:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getRulesAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        projectPk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_getruleset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getRulesetAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_checker_getrulesets:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.checker::getRulesetsAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_launchnewcheck:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{id}/launch-check
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.checker::launchNewCheckAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_updatechecker:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.checker::updateCheckerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_updatecheckerresult:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/checker/{checker_pk}/result/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.checker::updateCheckerResultAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_checker_updatecheckplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.checker::updateCheckplanAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_checker_updaterule:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.checker::updateRuleAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_updaterulecomponent:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.checker::updateRuleComponentAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        rulePk: '\d+'
        rulesetPk: '\d+'

open_api_server_checker_updateruleset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.checker::updateRulesetAction
    requirements:
        checkPlanPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

# collaboration
open_api_server_collaboration_acceptuserinvitation:
    path:     /user/invitations/{id}/accept
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::acceptUserInvitationAction
    requirements:
        id: '\d+'

open_api_server_collaboration_acceptvalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation/{id}/accept
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::acceptValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_adddocumenttag:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/tag
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::addDocumentTagAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_addgroupmember:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group/{group_pk}/member
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::addGroupMemberAction
    requirements:
        cloudPk: '\d+'
        groupPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_cancelclouduserinvitation:
    path:     /cloud/{cloud_pk}/invitation/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::cancelCloudUserInvitationAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_cancelprojectuserinvitation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/invitation/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::cancelProjectUserInvitationAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_checkaccess:
    path:     /cloud/{id}/check-access
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::checkAccessAction
    requirements:
        id: '\d+'

open_api_server_collaboration_closevisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{id}/close
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::closeVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/classification
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createClassificationAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createcloud:
    path:     /cloud
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createCloudAction

open_api_server_collaboration_createdmstree:
    path:     /cloud/{cloud_pk}/project/{id}/dms-tree
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createDMSTreeAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_createdemo:
    path:     /cloud/{id}/create-demo
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createDemoAction
    requirements:
        id: '\d+'

open_api_server_collaboration_createdocument:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createDocumentAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createfolder:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createFolderAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createmanagegroup:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createManageGroupAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createproject:
    path:     /cloud/{cloud_pk}/project
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createProjectAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_createprojectaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/access-token
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createProjectAccessTokenAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createtag:
    path:     /cloud/{cloud_pk}/project/{project_pk}/tag
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createTagAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createvalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_createvisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_createvisacomment:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/comment
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::createVisaCommentAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_deletealldocumenthistory:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/history/delete
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteAllDocumentHistoryAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deleteclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/classification/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteClassificationAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletecloud:
    path:     /cloud/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteCloudAction
    requirements:
        id: '\d+'

open_api_server_collaboration_deleteclouduser:
    path:     /cloud/{cloud_pk}/user/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteCloudUserAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_deletedocument:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteDocumentAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletedocumenttag:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/tag/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteDocumentTagAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletefolder:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteFolderAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletegroupmember:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group/{group_pk}/member/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteGroupMemberAction
    requirements:
        cloudPk: '\d+'
        groupPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletemanagegroup:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteManageGroupAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deleteproject:
    path:     /cloud/{cloud_pk}/project/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteProjectAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_deleteprojectaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/access-token/{token}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteProjectAccessTokenAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_collaboration_deleteprojectuser:
    path:     /cloud/{cloud_pk}/project/{project_pk}/user/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteProjectUserAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletetag:
    path:     /cloud/{cloud_pk}/project/{project_pk}/tag/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteTagAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletevalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_deletevisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_deletevisacomment:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/comment/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.collaboration::deleteVisaCommentAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_denyuserinvitation:
    path:     /user/invitations/{id}/deny
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::denyUserInvitationAction
    requirements:
        id: '\d+'

open_api_server_collaboration_denyvalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation/{id}/deny
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::denyValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_getclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/classification/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getClassificationAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getclassifications:
    path:     /cloud/{cloud_pk}/project/{project_pk}/classification
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getClassificationsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getcloud:
    path:     /cloud/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getCloudAction
    requirements:
        id: '\d+'

open_api_server_collaboration_getcloudinvitations:
    path:     /cloud/{cloud_pk}/invitation
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getCloudInvitationsAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_getcloudsize:
    path:     /cloud/{id}/size
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getCloudSizeAction
    requirements:
        id: '\d+'

open_api_server_collaboration_getclouduser:
    path:     /cloud/{cloud_pk}/user/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getCloudUserAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_getcloudusers:
    path:     /cloud/{cloud_pk}/user
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getCloudUsersAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_getclouds:
    path:     /cloud
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getCloudsAction

open_api_server_collaboration_getdocument:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getDocumentAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getdocumenthistories:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/history
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getDocumentHistoriesAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getdocuments:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getDocumentsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getfolder:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getFolderAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getfolderprojectusers:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder/{folder_pk}/user
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getFolderProjectUsersAction
    requirements:
        cloudPk: '\d+'
        folderPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getfolders:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getFoldersAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getgroup:
    path:     /cloud/{cloud_pk}/project/{project_pk}/me/group/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getGroupAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getgroups:
    path:     /cloud/{cloud_pk}/project/{project_pk}/me/group
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getGroupsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getmanagegroup:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getManageGroupAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getmanagegroups:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getManageGroupsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getproject:
    path:     /cloud/{cloud_pk}/project/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_getprojectaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/access-token/{token}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectAccessTokenAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_collaboration_getprojectaccesstokens:
    path:     /cloud/{cloud_pk}/project/{project_pk}/access-token
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectAccessTokensAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getprojectcreatorvisas:
    path:     /cloud/{cloud_pk}/project/{project_pk}/me/visa/creator
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectCreatorVisasAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getprojectdmstree:
    path:     /cloud/{cloud_pk}/project/{id}/dms-tree
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectDMSTreeAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_getprojectfoldertreeserializers:
    path:     /cloud/{cloud_pk}/project/folder-trees
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectFolderTreeSerializersAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_getprojectinvitations:
    path:     /cloud/{cloud_pk}/project/{project_pk}/invitation
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectInvitationsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getprojectsize:
    path:     /cloud/{cloud_pk}/project/{id}/size
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectSizeAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_getprojectsubtree:
    path:     /cloud/{cloud_pk}/project/subtree
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectSubTreeAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_getprojecttree:
    path:     /cloud/{cloud_pk}/project/{id}/tree
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectTreeAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_getprojectusers:
    path:     /cloud/{cloud_pk}/project/{project_pk}/user
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectUsersAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getprojectvalidatorvisas:
    path:     /cloud/{cloud_pk}/project/{project_pk}/me/visa/validator
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectValidatorVisasAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getprojects:
    path:     /cloud/{cloud_pk}/project
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getProjectsAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_getselfprojects:
    path:     /user/projects
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getSelfProjectsAction

open_api_server_collaboration_getselfuser:
    path:     /user
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getSelfUserAction

open_api_server_collaboration_gettag:
    path:     /cloud/{cloud_pk}/project/{project_pk}/tag/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getTagAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_gettags:
    path:     /cloud/{cloud_pk}/project/{project_pk}/tag
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getTagsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getuserinvitation:
    path:     /user/invitations/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getUserInvitationAction
    requirements:
        id: '\d+'

open_api_server_collaboration_getuserinvitations:
    path:     /user/invitations
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getUserInvitationsAction

open_api_server_collaboration_getvalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_getvalidations:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getValidationsAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_getvisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_getvisacomment:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/comment/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getVisaCommentAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_getvisacomments:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/comment
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getVisaCommentsAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_getvisas:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.collaboration::getVisasAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_inviteclouduser:
    path:     /cloud/{cloud_pk}/invitation
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::inviteCloudUserAction
    requirements:
        cloudPk: '\d+'

open_api_server_collaboration_inviteprojectuser:
    path:     /cloud/{cloud_pk}/project/{project_pk}/invitation
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::inviteProjectUserAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_leaveproject:
    path:     /cloud/{cloud_pk}/project/{id}/leave
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::leaveProjectAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_leaveversiondocumenthistory:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/history/{id}/leave
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::leaveVersionDocumentHistoryAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_makeheadversiondocumenthistory:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/history/{id}/head-version
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::makeHeadVersionDocumentHistoryAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_pausevisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{id}/pause
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::pauseVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_resetvalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation/{id}/reset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::resetValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_resumevisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{id}/resume
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.collaboration::resumeVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updateclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/classification/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateClassificationAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updatecloud:
    path:     /cloud/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateCloudAction
    requirements:
        id: '\d+'

open_api_server_collaboration_updateclouduser:
    path:     /cloud/{cloud_pk}/user/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateCloudUserAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_updatedocument:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateDocumentAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updatefolder:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateFolderAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updategroupfolder:
    path:     /cloud/{cloud_pk}/project/{project_pk}/folder/{folder_pk}/group/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateGroupFolderAction
    requirements:
        cloudPk: '\d+'
        folderPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updatemanagegroup:
    path:     /cloud/{cloud_pk}/project/{project_pk}/group/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateManageGroupAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updateproject:
    path:     /cloud/{cloud_pk}/project/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateProjectAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_collaboration_updateprojectaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/access-token/{token}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateProjectAccessTokenAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_collaboration_updateprojectuser:
    path:     /cloud/{cloud_pk}/project/{project_pk}/user/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateProjectUserAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updatetag:
    path:     /cloud/{cloud_pk}/project/{project_pk}/tag/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateTagAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updatevalidation:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/validation/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateValidationAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

open_api_server_collaboration_updatevisa:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateVisaAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_collaboration_updatevisacomment:
    path:     /cloud/{cloud_pk}/project/{project_pk}/document/{document_pk}/visa/{visa_pk}/comment/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.collaboration::updateVisaCommentAction
    requirements:
        cloudPk: '\d+'
        documentPk: '\d+'
        id: '\d+'
        projectPk: '\d+'
        visaPk: '\d+'

# ifc
open_api_server_ifc_addifcerrorsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/errors
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::addIfcErrorsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkdeleteifcclassificationsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/list_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkDeleteIfcClassificationsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkdeleteifcpropertiesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkDeleteIfcPropertiesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkdeleteifcpropertydefinitionsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkDeleteIfcPropertyDefinitionsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkdeleteifcunitsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkDeleteIfcUnitsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkdeletepropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkDeletePropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkfullupdateelementsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::bulkFullUpdateElementsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkfullupdateifcpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::bulkFullUpdateIfcPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkremoveclassificationsofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkRemoveClassificationsOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkremovedocumentsofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/documents/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkRemoveDocumentsOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkremoveelementsfromclassificationdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{model_classification_pk}/element/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::bulkRemoveElementsFromClassificationDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        modelClassificationPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkupdateelementsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.ifc::bulkUpdateElementsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_bulkupdateifcpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.ifc::bulkUpdateIfcPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createaccesstokendeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createAccessTokenDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createbuildingdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createBuildingDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createbuildingplandeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{building_uuid}/plan/add
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createBuildingPlanDeprecatedAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createcheckerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createCheckerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createcheckerresultdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createCheckerResultDeprecatedAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createclassificationelementrelationsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createClassificationElementRelationsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createclassificationsofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createClassificationsOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createelementpropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createElementPropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createelementpropertysetpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createElementPropertySetPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_createelementpropertysetpropertydefinitionunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createElementPropertySetPropertyDefinitionUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_createelementpropertysetpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createElementPropertySetPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_createifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/create-model
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createifcpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createIfcPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createifcunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createIfcUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createlayerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createLayerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createmetabuildingdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/create-metabuilding
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createMetaBuildingDeprecatedAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createpropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createPropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createpropertysetelementrelationsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset-element
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createPropertySetElementRelationsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createrawelementsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createRawElementsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createspacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createstoreydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createStoreyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createstoreyplandeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{storey_uuid}/plan/add
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createStoreyPlanDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_ifc_createsystemdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createSystemDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createtilesetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/tileset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createTilesetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createzonedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createZoneDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_createzonespacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::createZoneSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_ifc_deleteaccesstokendeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteAccessTokenDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_ifc_deletebuildingdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteBuildingDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_deletebuildingplandeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{building_uuid}/plan/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteBuildingPlanDeprecatedAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletecheckerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteCheckerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletecheckerresultdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteCheckerResultDeprecatedAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deleteelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_deleteifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deleteifcpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteIfcPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deleteifcpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteIfcPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deleteifcunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteIfcUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deleteifcwithoutdocdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/delete-model
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteIfcWithoutDocDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletelayerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteLayerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletepropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deletePropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletespacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletestoreydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteStoreyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_deletestoreyplandeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{storey_uuid}/plan/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteStoreyPlanDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_ifc_deletesystemdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteSystemDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_deletezonedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteZoneDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_deletezonespacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::deleteZoneSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_ifc_exportifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/export
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::exportIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_fullupdateelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.ifc::fullUpdateElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_getaccesstokendeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getAccessTokenDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_ifc_getaccesstokensdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getAccessTokensDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getbuildingdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getBuildingDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_getbuildingplanpositioningdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{building_uuid}/plan/{id}/positioning
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getBuildingPlanPositioningDeprecatedAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getbuildingsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getBuildingsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getcheckerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getCheckerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getcheckerresultdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getCheckerResultDeprecatedAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getcheckerresultsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getCheckerResultsDeprecatedAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getcheckersdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getCheckersDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getclassificationsofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getClassificationsOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getdocumentsofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/documents
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getDocumentsOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_getelementlinkeddocumentsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/documents
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementLinkedDocumentsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getelementpropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getelementpropertysetpropertiesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetPropertiesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_getelementpropertysetpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_getelementpropertysetpropertydefinitionunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetPropertyDefinitionUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_getelementpropertysetpropertydefinitionunitsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetPropertyDefinitionUnitsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_getelementpropertysetpropertydefinitionsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetPropertyDefinitionsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_getelementpropertysetpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_getelementpropertysetsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementPropertySetsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getelementsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getelementsfromclassificationdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{model_classification_pk}/element
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getElementsFromClassificationDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        modelClassificationPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcclassificationsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcClassificationsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcmaterialdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/material/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcMaterialDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcmaterialsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/material
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcMaterialsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcpropertiesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcPropertiesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcpropertydefinitionsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcPropertyDefinitionsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcunitsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcUnitsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getifcsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getIfcsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getlayerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getLayerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getlayersdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getLayersDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getmaterialdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/material/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getMaterialDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getmaterialsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/material
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getMaterialsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getprocessorhandlerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getProcessorHandlerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getprocessorhandlersdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getProcessorHandlersDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getpropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getPropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getpropertysetsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getPropertySetsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getrawelementsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getRawElementsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getsimpleelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}/simple
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getSimpleElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_getsimpleelementsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/simple
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getSimpleElementsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getspacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getspacesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getSpacesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getstoreydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getStoreyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_getstoreyplanpositioningdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{storey_uuid}/plan/{id}/positioning
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getStoreyPlanPositioningDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_ifc_getstoreysdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getStoreysDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getsystemdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getSystemDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_getsystemsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getSystemsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_gettilesetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/tileset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getTilesetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getzonedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getZoneDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_getzonespacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getZoneSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_ifc_getzonespacesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getZoneSpacesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_ifc_getzonesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::getZonesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_launchnewcheckdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}/launch-check
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::launchNewCheckDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_linkdocumentsofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::linkDocumentsOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_listclassificationelementrelationsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.ifc::listClassificationElementRelationsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_mergeifcsdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/merge
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::mergeIfcsDeprecatedAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_optimizeifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/optimize
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::optimizeIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_removeallelementpropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/all
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeAllElementPropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_removeclassificationofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeClassificationOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_removedocumentofelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/documents/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeDocumentOfElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_removeelementpropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeElementPropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_removeelementpropertysetpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeElementPropertySetPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_removeelementpropertysetpropertydefinitionunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeElementPropertySetPropertyDefinitionUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_removeelementpropertysetpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeElementPropertySetPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_removeelementsfromclassificationdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{model_classification_pk}/element/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.ifc::removeElementsFromClassificationDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        modelClassificationPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_reprocessifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/reprocess
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ifc::reprocessIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateaccesstokendeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateAccessTokenDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_ifc_updatebuildingdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateBuildingDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_updatebuildingplanpositioningdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{building_uuid}/plan/{id}/positioning
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateBuildingPlanPositioningDeprecatedAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatecheckerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateCheckerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatecheckerresultdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateCheckerResultDeprecatedAction
    requirements:
        checkerPk: '\d+'
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateelementdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateElementDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_updateelementpropertysetpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateElementPropertySetPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_ifc_updateifcdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateIfcDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateifcfilesdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/files
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateIfcFilesDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateifcpropertydefinitiondeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateIfcPropertyDefinitionDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateifcpropertydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateIfcPropertyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateifcunitdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateIfcUnitDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatelayerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateLayerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateorderbuildingplandeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/building/{building_uuid}/plan/order
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateOrderBuildingPlanDeprecatedAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateorderstoreyplandeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{storey_uuid}/plan/order
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateOrderStoreyPlanDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_ifc_updateorderstoreysdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/order
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateOrderStoreysDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updateprocessorhandlerdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateProcessorHandlerDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatepropertysetdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updatePropertySetDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatespacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatestoreydeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateStoreyDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_updatestoreyplanpositioningdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/storey/{storey_uuid}/plan/{id}/positioning
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateStoreyPlanPositioningDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_ifc_updatesystemdeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateSystemDeprecatedAction
    requirements:
        cloudPk: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_ifc_updatezonedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateZoneDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'

open_api_server_ifc_updatezonespacedeprecated:
    path:     /cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.ifc::updateZoneSpaceDeprecatedAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        ifcPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

# model
open_api_server_model_addmodelerrors:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/errors
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::addModelErrorsAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkdeletemodelclassifications:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification/list_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkDeleteModelClassificationsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkdeletemodelproperties:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkDeleteModelPropertiesAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkdeletemodelpropertydefinitions:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertydefinition/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkDeleteModelPropertyDefinitionsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkdeletemodelunits:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/unit/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkDeleteModelUnitsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkdeletepropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkDeletePropertySetAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkfullupdateelements:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/bulk_update
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::bulkFullUpdateElementsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkfullupdatemodelproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property/bulk_update
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::bulkFullUpdateModelPropertyAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkremoveclassificationsofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/classification/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkRemoveClassificationsOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkremovedocumentsofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/documents/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkRemoveDocumentsOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkremoveelementsfromclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification/{model_classification_pk}/element/bulk_destroy
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::bulkRemoveElementsFromClassificationAction
    requirements:
        cloudPk: '\d+'
        modelClassificationPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkupdateelements:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/bulk_update
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.model::bulkUpdateElementsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_bulkupdatemodelproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property/bulk_update
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.model::bulkUpdateModelPropertyAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/access_token
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createAccessTokenAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createbuilding:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createBuildingAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createbuildingplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{building_uuid}/plan/add
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createBuildingPlanAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createclassificationelementrelations:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification-element
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createClassificationElementRelationsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createclassificationsofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/classification
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createClassificationsOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createElementAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createelementpropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createElementPropertySetAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createelementpropertysetproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createElementPropertySetPropertyAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_createelementpropertysetpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createElementPropertySetPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_createelementpropertysetpropertydefinitionunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createElementPropertySetPropertyDefinitionUnitAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_createlayer:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/layer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createLayerAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createmetabuilding:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/create-metabuilding
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createMetaBuildingAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createmodel:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/create-model
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createModelAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createmodelpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertydefinition
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createModelPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createmodelunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/unit
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createModelUnitAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createpropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createPropertySetAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createpropertysetelementrelations:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset-element
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createPropertySetElementRelationsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createrawelements:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/raw
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createRawElementsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createspace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/space
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createSpaceAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createstorey:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createStoreyAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createstoreyplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{storey_uuid}/plan/add
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createStoreyPlanAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_model_createsystem:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/system
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createSystemAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createtileset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/tileset
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createTilesetAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_createzone:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createZoneAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_createzonespace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{zone_pk}/space
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::createZoneSpaceAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_model_deleteaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/access_token/{token}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteAccessTokenAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_model_deletebuilding:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteBuildingAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_deletebuildingplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{building_uuid}/plan/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteBuildingPlanAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deleteelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteElementAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_deletelayer:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/layer/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteLayerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletemodel:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteModelAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_deletemodelproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteModelPropertyAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletemodelpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertydefinition/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteModelPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletemodelunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/unit/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteModelUnitAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletemodelwithoutdoc:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/delete-model
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteModelWithoutDocAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_deletepropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deletePropertySetAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletespace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/space/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteSpaceAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletestorey:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteStoreyAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_deletestoreyplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{storey_uuid}/plan/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteStoreyPlanAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_model_deletesystem:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/system/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteSystemAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_deletezone:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteZoneAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_deletezonespace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{zone_pk}/space/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::deleteZoneSpaceAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_model_exportifc:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/export
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::exportIfcAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_fullupdateelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{uuid}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.model::fullUpdateElementAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_getaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/access_token/{token}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getAccessTokenAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_model_getaccesstokens:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/access_token
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getAccessTokensAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getbuilding:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getBuildingAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_getbuildingplanpositioning:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{building_uuid}/plan/{id}/positioning
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getBuildingPlanPositioningAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getbuildings:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getBuildingsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getclassificationsofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/classification
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getClassificationsOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getdocumentsofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/documents
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getDocumentsOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_getelementlinkeddocuments:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/documents
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementLinkedDocumentsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getelementpropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getelementpropertysetproperties:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetPropertiesAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_getelementpropertysetproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetPropertyAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_getelementpropertysetpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_getelementpropertysetpropertydefinitionunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetPropertyDefinitionUnitAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_getelementpropertysetpropertydefinitionunits:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetPropertyDefinitionUnitsAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_getelementpropertysetpropertydefinitions:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetPropertyDefinitionsAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_getelementpropertysets:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementPropertySetsAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getelements:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getelementsfromclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification/{model_classification_pk}/element
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getElementsFromClassificationAction
    requirements:
        cloudPk: '\d+'
        modelClassificationPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getlayer:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/layer/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getLayerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getlayers:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/layer
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getLayersAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmaterial:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/material/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getMaterialAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmaterials:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/material
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getMaterialsAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodel:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelclassifications:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelClassificationsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelmaterial:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/material/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelMaterialAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelmaterials:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/material
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelMaterialsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelproperties:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelPropertiesAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelPropertyAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertydefinition/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelpropertydefinitions:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertydefinition
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelPropertyDefinitionsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/unit/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelUnitAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodelunits:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/unit
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelUnitsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getmodels:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getModelsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getprocessorhandler:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/processorhandler/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getProcessorHandlerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getprocessorhandlers:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/processorhandler
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getProcessorHandlersAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getpropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getPropertySetAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getpropertysets:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getPropertySetsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getrawelements:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/raw
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getRawElementsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getsimpleelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{uuid}/simple
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getSimpleElementAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_getsimpleelements:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/simple
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getSimpleElementsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getspace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/space/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getSpaceAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getspaces:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/space
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getSpacesAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getstorey:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getStoreyAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_getstoreyplanpositioning:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{storey_uuid}/plan/{id}/positioning
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getStoreyPlanPositioningAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_model_getstoreys:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getStoreysAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getsystem:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/system/{uuid}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getSystemAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_getsystems:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/system
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getSystemsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_gettileset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/tileset
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getTilesetAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_getzone:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getZoneAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_getzonespace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{zone_pk}/space/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getZoneSpaceAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_model_getzonespaces:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{zone_pk}/space
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getZoneSpacesAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

open_api_server_model_getzones:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::getZonesAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_linkdocumentsofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::linkDocumentsOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_listclassificationelementrelations:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification-element
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.model::listClassificationElementRelationsAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_mergeifcs:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/merge
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::mergeIfcsAction
    requirements:
        cloudPk: '\d+'
        projectPk: '\d+'

open_api_server_model_optimizeifc:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/optimize
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::optimizeIfcAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_removeallelementpropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/all
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeAllElementPropertySetAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_removeclassificationofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/classification/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeClassificationOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_removedocumentofelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/documents/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeDocumentOfElementAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_removeelementpropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeElementPropertySetAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_removeelementpropertysetproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeElementPropertySetPropertyAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_removeelementpropertysetpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeElementPropertySetPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_removeelementpropertysetpropertydefinitionunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeElementPropertySetPropertyDefinitionUnitAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertyPk: '\d+'
        propertydefinitionPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_removeelementsfromclassification:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/classification/{model_classification_pk}/element/{uuid}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.model::removeElementsFromClassificationAction
    requirements:
        cloudPk: '\d+'
        modelClassificationPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_reprocessmodel:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/reprocess
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.model::reprocessModelAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_updateaccesstoken:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/access_token/{token}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateAccessTokenAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        token: '[a-z0-9]+'

open_api_server_model_updatebuilding:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateBuildingAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_updatebuildingplanpositioning:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{building_uuid}/plan/{id}/positioning
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateBuildingPlanPositioningAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updateelement:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateElementAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_updateelementpropertysetproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateElementPropertySetPropertyAction
    requirements:
        cloudPk: '\d+'
        elementUuid: '[a-z0-9]+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        propertysetPk: '\d+'

open_api_server_model_updatelayer:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/layer/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateLayerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatemodel:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateModelAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_updatemodelfiles:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{id}/files
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateModelFilesAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        projectPk: '\d+'

open_api_server_model_updatemodelproperty:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/property/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateModelPropertyAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatemodelpropertydefinition:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertydefinition/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateModelPropertyDefinitionAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatemodelunit:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/unit/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateModelUnitAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updateorderbuildingplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/building/{building_uuid}/plan/order
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateOrderBuildingPlanAction
    requirements:
        buildingUuid: '[a-z0-9]+'
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updateorderstoreyplan:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{storey_uuid}/plan/order
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateOrderStoreyPlanAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_model_updateorderstoreys:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/order
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateOrderStoreysAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updateprocessorhandler:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/processorhandler/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateProcessorHandlerAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatepropertyset:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/propertyset/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updatePropertySetAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatespace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/space/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateSpaceAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatestorey:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateStoreyAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_updatestoreyplanpositioning:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/storey/{storey_uuid}/plan/{id}/positioning
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateStoreyPlanPositioningAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        storeyUuid: '[a-z0-9]+'

open_api_server_model_updatesystem:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/system/{uuid}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateSystemAction
    requirements:
        cloudPk: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        uuid: '[a-z0-9]+'

open_api_server_model_updatezone:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateZoneAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'

open_api_server_model_updatezonespace:
    path:     /cloud/{cloud_pk}/project/{project_pk}/model/{model_pk}/zone/{zone_pk}/space/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.model::updateZoneSpaceAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'
        modelPk: '\d+'
        projectPk: '\d+'
        zonePk: '\d+'

# sso
open_api_server_sso_acceptinvitation:
    path:     /identity-provider/invitation/{id}/accept
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.sso::acceptInvitationAction
    requirements:
        id: '\d+'

open_api_server_sso_deleteuser:
    path:     /identity-provider/user
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.sso::deleteUserAction

open_api_server_sso_denyinvitation:
    path:     /identity-provider/invitation/{id}/deny
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.sso::denyInvitationAction
    requirements:
        id: '\d+'

open_api_server_sso_getinvitation:
    path:     /identity-provider/invitation/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.sso::getInvitationAction
    requirements:
        id: '\d+'

open_api_server_sso_getinvitations:
    path:     /identity-provider/invitation
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.sso::getInvitationsAction

# webhook
open_api_server_webhook_createwebhook:
    path:     /cloud/{cloud_pk}/webhook
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.webhook::createWebHookAction
    requirements:
        cloudPk: '\d+'

open_api_server_webhook_deletewebhook:
    path:     /cloud/{cloud_pk}/webhook/{id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.webhook::deleteWebHookAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_webhook_getwebhook:
    path:     /cloud/{cloud_pk}/webhook/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.webhook::getWebHookAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_webhook_getwebhooks:
    path:     /cloud/{cloud_pk}/webhook
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.webhook::getWebHooksAction
    requirements:
        cloudPk: '\d+'

open_api_server_webhook_pingwebhook:
    path:     /cloud/{cloud_pk}/webhook/{id}/ping
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.webhook::pingWebHookAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

open_api_server_webhook_updatewebhook:
    path:     /cloud/{cloud_pk}/webhook/{id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.webhook::updateWebHookAction
    requirements:
        cloudPk: '\d+'
        id: '\d+'

