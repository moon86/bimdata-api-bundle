<?php
/**
 * RawElements
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RawElements model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class RawElements 
{
        /**
     * @var array|null
     * @SerializedName("units")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawUnit")
     * })
     * @Type("array<OpenAPI\Server\Model\RawUnit>")
     */
    protected ?array $units = null;

    /**
     * @var array|null
     * @SerializedName("definitions")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawDefinition")
     * })
     * @Type("array<OpenAPI\Server\Model\RawDefinition>")
     */
    protected ?array $definitions = null;

    /**
     * @var array|null
     * @SerializedName("property_sets")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawPropertySet")
     * })
     * @Type("array<OpenAPI\Server\Model\RawPropertySet>")
     */
    protected ?array $propertySets = null;

    /**
     * @var array|null
     * @SerializedName("classifications")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawClassification")
     * })
     * @Type("array<OpenAPI\Server\Model\RawClassification>")
     */
    protected ?array $classifications = null;

    /**
     * @var array|null
     * @SerializedName("layers")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawLayer")
     * })
     * @Type("array<OpenAPI\Server\Model\RawLayer>")
     */
    protected ?array $layers = null;

    /**
     * @var array|null
     * @SerializedName("systems")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawSystem")
     * })
     * @Type("array<OpenAPI\Server\Model\RawSystem>")
     */
    protected ?array $systems = null;

    /**
     * @var RawElementsMaterials|null
     * @SerializedName("materials")
     * @Assert\Type("OpenAPI\Server\Model\RawElementsMaterials")
     * @Type("OpenAPI\Server\Model\RawElementsMaterials")
     */
    protected ?RawElementsMaterials $materials = null;

    /**
     * @var array|null
     * @SerializedName("elements")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RawElement")
     * })
     * @Type("array<OpenAPI\Server\Model\RawElement>")
     */
    protected ?array $elements = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->units = $data['units'] ?? null;
        $this->definitions = $data['definitions'] ?? null;
        $this->propertySets = $data['propertySets'] ?? null;
        $this->classifications = $data['classifications'] ?? null;
        $this->layers = $data['layers'] ?? null;
        $this->systems = $data['systems'] ?? null;
        $this->materials = $data['materials'] ?? null;
        $this->elements = $data['elements'] ?? null;
    }

    /**
     * Gets units.
     *
     * @return array|null
     */
    public function getUnits(): ?array
    {
        return $this->units;
    }

    /**
     * Sets units.
     *
     * @param array|null $units
     *
     * @return $this
     */
    public function setUnits(?array $units = null): self
    {
        $this->units = $units;

        return $this;
    }

    /**
     * Gets definitions.
     *
     * @return array|null
     */
    public function getDefinitions(): ?array
    {
        return $this->definitions;
    }

    /**
     * Sets definitions.
     *
     * @param array|null $definitions
     *
     * @return $this
     */
    public function setDefinitions(?array $definitions = null): self
    {
        $this->definitions = $definitions;

        return $this;
    }

    /**
     * Gets propertySets.
     *
     * @return array|null
     */
    public function getPropertySets(): ?array
    {
        return $this->propertySets;
    }

    /**
     * Sets propertySets.
     *
     * @param array|null $propertySets
     *
     * @return $this
     */
    public function setPropertySets(?array $propertySets = null): self
    {
        $this->propertySets = $propertySets;

        return $this;
    }

    /**
     * Gets classifications.
     *
     * @return array|null
     */
    public function getClassifications(): ?array
    {
        return $this->classifications;
    }

    /**
     * Sets classifications.
     *
     * @param array|null $classifications
     *
     * @return $this
     */
    public function setClassifications(?array $classifications = null): self
    {
        $this->classifications = $classifications;

        return $this;
    }

    /**
     * Gets layers.
     *
     * @return array|null
     */
    public function getLayers(): ?array
    {
        return $this->layers;
    }

    /**
     * Sets layers.
     *
     * @param array|null $layers
     *
     * @return $this
     */
    public function setLayers(?array $layers = null): self
    {
        $this->layers = $layers;

        return $this;
    }

    /**
     * Gets systems.
     *
     * @return array|null
     */
    public function getSystems(): ?array
    {
        return $this->systems;
    }

    /**
     * Sets systems.
     *
     * @param array|null $systems
     *
     * @return $this
     */
    public function setSystems(?array $systems = null): self
    {
        $this->systems = $systems;

        return $this;
    }

    /**
     * Gets materials.
     *
     * @return RawElementsMaterials|null
     */
    public function getMaterials(): ?RawElementsMaterials
    {
        return $this->materials;
    }

    /**
     * Sets materials.
     *
     * @param RawElementsMaterials|null $materials
     *
     * @return $this
     */
    public function setMaterials(?RawElementsMaterials $materials = null): self
    {
        $this->materials = $materials;

        return $this;
    }

    /**
     * Gets elements.
     *
     * @return array|null
     */
    public function getElements(): ?array
    {
        return $this->elements;
    }

    /**
     * Sets elements.
     *
     * @param array|null $elements
     *
     * @return $this
     */
    public function setElements(?array $elements): self
    {
        $this->elements = $elements;

        return $this;
    }
}


