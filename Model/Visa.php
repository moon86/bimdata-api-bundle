<?php
/**
 * Visa
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Visa model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class Visa 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $id = null;

    /**
     * @var array|null
     * @SerializedName("validations")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\VisaValidation")
     * })
     * @Type("array<OpenAPI\Server\Model\VisaValidation>")
     */
    protected ?array $validations = null;

    /**
     * Validation IDs where one or more validators have no longer access to the visa document.
     *
     * @var array|null
     * @SerializedName("validations_in_error")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    protected ?array $validationsInError = null;

    /**
     * @var 
     * @SerializedName("creator")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("UserProject")
     * @Type("UserProject")
     */
    protected  $creator = null;

    /**
     * @var int|null
     * @SerializedName("document_id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $documentId = null;

    /**
     * @var string|null
     * @SerializedName("status")
     * @Assert\NotNull()
     * @Assert\Choice({ "O", "A", "C" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $status = null;

    /**
     * Description of the visa
     *
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $description = null;

    /**
     * @var array|null
     * @SerializedName("comments")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\VisaComment")
     * })
     * @Type("array<OpenAPI\Server\Model\VisaComment>")
     */
    protected ?array $comments = null;

    /**
     * @var \DateTime|null
     * @SerializedName("deadline")
     * @Assert\Date()
     * @Type("DateTime<'Y-m-d'>")
     */
    protected ?\DateTime $deadline = null;

    /**
     * @var \DateTime|null
     * @SerializedName("created_at")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $createdAt = null;

    /**
     * @var \DateTime|null
     * @SerializedName("updated_at")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $updatedAt = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = $data['id'] ?? null;
        $this->validations = $data['validations'] ?? null;
        $this->validationsInError = $data['validationsInError'] ?? null;
        $this->creator = $data['creator'] ?? null;
        $this->documentId = $data['documentId'] ?? null;
        $this->status = $data['status'] ?? null;
        $this->description = $data['description'] ?? null;
        $this->comments = $data['comments'] ?? null;
        $this->deadline = $data['deadline'] ?? null;
        $this->createdAt = $data['createdAt'] ?? null;
        $this->updatedAt = $data['updatedAt'] ?? null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId(?int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets validations.
     *
     * @return array|null
     */
    public function getValidations(): ?array
    {
        return $this->validations;
    }

    /**
     * Sets validations.
     *
     * @param array|null $validations
     *
     * @return $this
     */
    public function setValidations(?array $validations): self
    {
        $this->validations = $validations;

        return $this;
    }

    /**
     * Gets validationsInError.
     *
     * @return array|null
     */
    public function getValidationsInError(): ?array
    {
        return $this->validationsInError;
    }

    /**
     * Sets validationsInError.
     *
     * @param array|null $validationsInError  Validation IDs where one or more validators have no longer access to the visa document.
     *
     * @return $this
     */
    public function setValidationsInError(?array $validationsInError): self
    {
        $this->validationsInError = $validationsInError;

        return $this;
    }

    /**
     * Gets creator.
     *
     * @return 
     */
    public function getCreator(): 
    {
        return $this->creator;
    }

    /**
     * Sets creator.
     *
     * @param  $creator
     *
     * @return $this
     */
    public function setCreator( $creator): self
    {
        $this->creator = $creator;

        return $this;
    }

    /**
     * Gets documentId.
     *
     * @return int|null
     */
    public function getDocumentId(): ?int
    {
        return $this->documentId;
    }

    /**
     * Sets documentId.
     *
     * @param int|null $documentId
     *
     * @return $this
     */
    public function setDocumentId(?int $documentId): self
    {
        $this->documentId = $documentId;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param string|null $status
     *
     * @return $this
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description  Description of the visa
     *
     * @return $this
     */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets comments.
     *
     * @return array|null
     */
    public function getComments(): ?array
    {
        return $this->comments;
    }

    /**
     * Sets comments.
     *
     * @param array|null $comments
     *
     * @return $this
     */
    public function setComments(?array $comments): self
    {
        $this->comments = $comments;

        return $this;
    }

    /**
     * Gets deadline.
     *
     * @return \DateTime|null
     */
    public function getDeadline(): ?\DateTime
    {
        return $this->deadline;
    }

    /**
     * Sets deadline.
     *
     * @param \DateTime|null $deadline
     *
     * @return $this
     */
    public function setDeadline(?\DateTime $deadline = null): self
    {
        $this->deadline = $deadline;

        return $this;
    }

    /**
     * Gets createdAt.
     *
     * @return \DateTime|null
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets createdAt.
     *
     * @param \DateTime|null $createdAt
     *
     * @return $this
     */
    public function setCreatedAt(?\DateTime $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Gets updatedAt.
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets updatedAt.
     *
     * @param \DateTime|null $updatedAt
     *
     * @return $this
     */
    public function setUpdatedAt(?\DateTime $updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }
}


