<?php
/**
 * Invitation
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Invitation model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class Invitation 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $id = null;

    /**
     * @var int|null
     * @SerializedName("client_id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $clientId = null;

    /**
     * User will be redirected to this uri when they accept the invitation
     *
     * @var string|null
     * @SerializedName("redirect_uri")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 512
     * )
     */
    protected ?string $redirectUri = null;

    /**
     * @var string|null
     * @SerializedName("cloud_name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $cloudName = null;

    /**
     * Role the user will have when they accept the invitation
     *
     * @var int|null
     * @SerializedName("cloud_role")
     * @Assert\NotNull()
     * @Assert\Choice({ 100, 50 })
     * @Assert\Type("int")
     * @Type("int")
     * @Assert\GreaterThanOrEqual(0)
     * @Assert\LessThanOrEqual(2147483647)
     */
    protected ?int $cloudRole = null;

    /**
     * @var string|null
     * @SerializedName("project_name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $projectName = null;

    /**
     * Role the user will have when they accept the invitation
     *
     * @var int|null
     * @SerializedName("project_role")
     * @Assert\Choice({ 100, 50, 25, null })
     * @Assert\Type("int")
     * @Type("int")
     * @Assert\GreaterThanOrEqual(0)
     * @Assert\LessThanOrEqual(2147483647)
     */
    protected ?int $projectRole = null;

    /**
     * email of the user to invite
     *
     * @var string|null
     * @SerializedName("email")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 256
     * )
     */
    protected ?string $email = null;

    /**
     * A: Accepted         D: Denied         P: Pending
     *
     * @var string|null
     * @SerializedName("status")
     * @Assert\Choice({ "A", "D", "P" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $status = null;

    /**
     * OIDC sub of the sender. The original sub from the provider is used instead of the broker sub
     *
     * @var string|null
     * @SerializedName("sender_provider_sub")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $senderProviderSub = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = $data['id'] ?? null;
        $this->clientId = $data['clientId'] ?? null;
        $this->redirectUri = $data['redirectUri'] ?? null;
        $this->cloudName = $data['cloudName'] ?? null;
        $this->cloudRole = $data['cloudRole'] ?? null;
        $this->projectName = $data['projectName'] ?? null;
        $this->projectRole = $data['projectRole'] ?? null;
        $this->email = $data['email'] ?? null;
        $this->status = $data['status'] ?? null;
        $this->senderProviderSub = $data['senderProviderSub'] ?? null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId(?int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets clientId.
     *
     * @return int|null
     */
    public function getClientId(): ?int
    {
        return $this->clientId;
    }

    /**
     * Sets clientId.
     *
     * @param int|null $clientId
     *
     * @return $this
     */
    public function setClientId(?int $clientId): self
    {
        $this->clientId = $clientId;

        return $this;
    }

    /**
     * Gets redirectUri.
     *
     * @return string|null
     */
    public function getRedirectUri(): ?string
    {
        return $this->redirectUri;
    }

    /**
     * Sets redirectUri.
     *
     * @param string|null $redirectUri  User will be redirected to this uri when they accept the invitation
     *
     * @return $this
     */
    public function setRedirectUri(?string $redirectUri): self
    {
        $this->redirectUri = $redirectUri;

        return $this;
    }

    /**
     * Gets cloudName.
     *
     * @return string|null
     */
    public function getCloudName(): ?string
    {
        return $this->cloudName;
    }

    /**
     * Sets cloudName.
     *
     * @param string|null $cloudName
     *
     * @return $this
     */
    public function setCloudName(?string $cloudName): self
    {
        $this->cloudName = $cloudName;

        return $this;
    }

    /**
     * Gets cloudRole.
     *
     * @return int|null
     */
    public function getCloudRole(): ?int
    {
        return $this->cloudRole;
    }

    /**
     * Sets cloudRole.
     *
     * @param int|null $cloudRole  Role the user will have when they accept the invitation
     *
     * @return $this
     */
    public function setCloudRole(?int $cloudRole): self
    {
        $this->cloudRole = $cloudRole;

        return $this;
    }

    /**
     * Gets projectName.
     *
     * @return string|null
     */
    public function getProjectName(): ?string
    {
        return $this->projectName;
    }

    /**
     * Sets projectName.
     *
     * @param string|null $projectName
     *
     * @return $this
     */
    public function setProjectName(?string $projectName = null): self
    {
        $this->projectName = $projectName;

        return $this;
    }

    /**
     * Gets projectRole.
     *
     * @return int|null
     */
    public function getProjectRole(): ?int
    {
        return $this->projectRole;
    }

    /**
     * Sets projectRole.
     *
     * @param int|null $projectRole  Role the user will have when they accept the invitation
     *
     * @return $this
     */
    public function setProjectRole(?int $projectRole = null): self
    {
        $this->projectRole = $projectRole;

        return $this;
    }

    /**
     * Gets email.
     *
     * @return string|null
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string|null $email  email of the user to invite
     *
     * @return $this
     */
    public function setEmail(?string $email): self
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param string|null $status  A: Accepted         D: Denied         P: Pending
     *
     * @return $this
     */
    public function setStatus(?string $status = null): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets senderProviderSub.
     *
     * @return string|null
     */
    public function getSenderProviderSub(): ?string
    {
        return $this->senderProviderSub;
    }

    /**
     * Sets senderProviderSub.
     *
     * @param string|null $senderProviderSub  OIDC sub of the sender. The original sub from the provider is used instead of the broker sub
     *
     * @return $this
     */
    public function setSenderProviderSub(?string $senderProviderSub = null): self
    {
        $this->senderProviderSub = $senderProviderSub;

        return $this;
    }
}


