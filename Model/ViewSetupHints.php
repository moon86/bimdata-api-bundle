<?php
/**
 * ViewSetupHints
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ViewSetupHints model.
 *
 * Adds nested create feature
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ViewSetupHints 
{
        /**
     * @var bool|null
     * @SerializedName("spaces_visible")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $spacesVisible = null;

    /**
     * @var bool|null
     * @SerializedName("space_boundaries_visible")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $spaceBoundariesVisible = null;

    /**
     * @var bool|null
     * @SerializedName("openings_visible")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $openingsVisible = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->spacesVisible = $data['spacesVisible'] ?? null;
        $this->spaceBoundariesVisible = $data['spaceBoundariesVisible'] ?? null;
        $this->openingsVisible = $data['openingsVisible'] ?? null;
    }

    /**
     * Gets spacesVisible.
     *
     * @return bool|null
     */
    public function isSpacesVisible(): ?bool
    {
        return $this->spacesVisible;
    }

    /**
     * Sets spacesVisible.
     *
     * @param bool|null $spacesVisible
     *
     * @return $this
     */
    public function setSpacesVisible(?bool $spacesVisible = null): self
    {
        $this->spacesVisible = $spacesVisible;

        return $this;
    }

    /**
     * Gets spaceBoundariesVisible.
     *
     * @return bool|null
     */
    public function isSpaceBoundariesVisible(): ?bool
    {
        return $this->spaceBoundariesVisible;
    }

    /**
     * Sets spaceBoundariesVisible.
     *
     * @param bool|null $spaceBoundariesVisible
     *
     * @return $this
     */
    public function setSpaceBoundariesVisible(?bool $spaceBoundariesVisible = null): self
    {
        $this->spaceBoundariesVisible = $spaceBoundariesVisible;

        return $this;
    }

    /**
     * Gets openingsVisible.
     *
     * @return bool|null
     */
    public function isOpeningsVisible(): ?bool
    {
        return $this->openingsVisible;
    }

    /**
     * Sets openingsVisible.
     *
     * @param bool|null $openingsVisible
     *
     * @return $this
     */
    public function setOpeningsVisible(?bool $openingsVisible = null): self
    {
        $this->openingsVisible = $openingsVisible;

        return $this;
    }
}


