<?php
/**
 * ClippingPlaneRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ClippingPlaneRequest model.
 *
 * Adds nested create feature
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ClippingPlaneRequest 
{
        /**
     * @var PointRequest|null
     * @SerializedName("location")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\PointRequest")
     * @Type("OpenAPI\Server\Model\PointRequest")
     */
    protected ?PointRequest $location = null;

    /**
     * @var DirectionRequest|null
     * @SerializedName("direction")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\DirectionRequest")
     * @Type("OpenAPI\Server\Model\DirectionRequest")
     */
    protected ?DirectionRequest $direction = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->location = $data['location'] ?? null;
        $this->direction = $data['direction'] ?? null;
    }

    /**
     * Gets location.
     *
     * @return PointRequest|null
     */
    public function getLocation(): ?PointRequest
    {
        return $this->location;
    }

    /**
     * Sets location.
     *
     * @param PointRequest|null $location
     *
     * @return $this
     */
    public function setLocation(?PointRequest $location): self
    {
        $this->location = $location;

        return $this;
    }

    /**
     * Gets direction.
     *
     * @return DirectionRequest|null
     */
    public function getDirection(): ?DirectionRequest
    {
        return $this->direction;
    }

    /**
     * Sets direction.
     *
     * @param DirectionRequest|null $direction
     *
     * @return $this
     */
    public function setDirection(?DirectionRequest $direction): self
    {
        $this->direction = $direction;

        return $this;
    }
}


