<?php
/**
 * PatchedIfcAccessTokenRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PatchedIfcAccessTokenRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class PatchedIfcAccessTokenRequest 
{
        /**
     * @var bool|null
     * @SerializedName("read_only")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $readOnly = null;

    /**
     * @var \DateTime|null
     * @SerializedName("expires_at")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $expiresAt = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->readOnly = $data['readOnly'] ?? null;
        $this->expiresAt = $data['expiresAt'] ?? null;
    }

    /**
     * Gets readOnly.
     *
     * @return bool|null
     */
    public function isReadOnly(): ?bool
    {
        return $this->readOnly;
    }

    /**
     * Sets readOnly.
     *
     * @param bool|null $readOnly
     *
     * @return $this
     */
    public function setReadOnly(?bool $readOnly = null): self
    {
        $this->readOnly = $readOnly;

        return $this;
    }

    /**
     * Gets expiresAt.
     *
     * @return \DateTime|null
     */
    public function getExpiresAt(): ?\DateTime
    {
        return $this->expiresAt;
    }

    /**
     * Sets expiresAt.
     *
     * @param \DateTime|null $expiresAt
     *
     * @return $this
     */
    public function setExpiresAt(?\DateTime $expiresAt = null): self
    {
        $this->expiresAt = $expiresAt;

        return $this;
    }
}


