<?php
/**
 * PatchedViewpointRequestComponents
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PatchedViewpointRequestComponents model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class PatchedViewpointRequestComponents 
{
        /**
     * @var array|null
     * @SerializedName("coloring")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\ColoringRequest")
     * })
     * @Type("array<OpenAPI\Server\Model\ColoringRequest>")
     */
    protected ?array $coloring = null;

    /**
     * @var ComponentsParentRequestVisibility|null
     * @SerializedName("visibility")
     * @Assert\Type("OpenAPI\Server\Model\ComponentsParentRequestVisibility")
     * @Type("OpenAPI\Server\Model\ComponentsParentRequestVisibility")
     */
    protected ?ComponentsParentRequestVisibility $visibility = null;

    /**
     * @var array|null
     * @SerializedName("selection")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\ComponentRequest")
     * })
     * @Type("array<OpenAPI\Server\Model\ComponentRequest>")
     */
    protected ?array $selection = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->coloring = $data['coloring'] ?? null;
        $this->visibility = $data['visibility'] ?? null;
        $this->selection = $data['selection'] ?? null;
    }

    /**
     * Gets coloring.
     *
     * @return array|null
     */
    public function getColoring(): ?array
    {
        return $this->coloring;
    }

    /**
     * Sets coloring.
     *
     * @param array|null $coloring
     *
     * @return $this
     */
    public function setColoring(?array $coloring = null): self
    {
        $this->coloring = $coloring;

        return $this;
    }

    /**
     * Gets visibility.
     *
     * @return ComponentsParentRequestVisibility|null
     */
    public function getVisibility(): ?ComponentsParentRequestVisibility
    {
        return $this->visibility;
    }

    /**
     * Sets visibility.
     *
     * @param ComponentsParentRequestVisibility|null $visibility
     *
     * @return $this
     */
    public function setVisibility(?ComponentsParentRequestVisibility $visibility = null): self
    {
        $this->visibility = $visibility;

        return $this;
    }

    /**
     * Gets selection.
     *
     * @return array|null
     */
    public function getSelection(): ?array
    {
        return $this->selection;
    }

    /**
     * Sets selection.
     *
     * @param array|null $selection
     *
     * @return $this
     */
    public function setSelection(?array $selection = null): self
    {
        $this->selection = $selection;

        return $this;
    }
}


